[
  {
    "id": 746,
    "iid": 1,
    "project_id": 210,
    "title": "[US-01] Ship placement implementation",
    "description": "## Description\nImplements ship placement functionality for the Battleship game as described in issue #1.\n\n## Changes\n- Created Board class with 10x10 grid and ship management\n- Created Ship class with placement and validation logic\n- Created GameService for game operations\n- Added comprehensive test coverage for all acceptance criteria\n\n## Features Implemented\n- ✅ 10x10 board for each player\n- ✅ Standard fleet: Carrier (5), Battleship (4), Cruiser (3), Submarine (3), Destroyer (2)\n- ✅ Straight placement (horizontal/vertical only)\n- ✅ Boundary validation (prevents placement outside board)\n- ✅ Overlap prevention (prevents ships from overlapping)\n- ✅ Board ready state detection (when all ships placed)\n\n## Acceptance Criteria Verified\n- ✅ If a ship is placed outside the board, the action should not succeed and an error or similar feedback should appear\n- ✅ If two ships end up on the same squares, the later placement should not overwrite the earlier one\n- ✅ When all ships have been placed validly, the board can be considered ready and hidden for the opponent\n\n## Technical Details\n- Java 21+ with Maven build system\n- JUnit 5 test framework\n- Layered architecture with model/service separation\n- Comprehensive test coverage with acceptance criteria validation\n\nCloses #1",
    "state": "merged",
    "created_at": "2025-10-20T01:55:44.575Z",
    "updated_at": "2025-10-20T01:57:35.681Z",
    "merged_by": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "merge_user": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "merged_at": "2025-10-20T01:57:36.047Z",
    "closed_by": null,
    "closed_at": null,
    "target_branch": "master",
    "source_branch": "feature/issue-1-us-01-setting-ships-somewhere-",
    "user_notes_count": 0,
    "upvotes": 0,
    "downvotes": 0,
    "author": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "assignees": [],
    "assignee": null,
    "reviewers": [],
    "source_project_id": 210,
    "target_project_id": 210,
    "labels": [],
    "draft": false,
    "imported": false,
    "imported_from": "none",
    "work_in_progress": false,
    "milestone": null,
    "merge_when_pipeline_succeeds": false,
    "merge_status": "can_be_merged",
    "detailed_merge_status": "not_open",
    "merge_after": null,
    "sha": "ef235b5bd6595d289287d0b09569806fbda829ec",
    "merge_commit_sha": "8c3d5e2c69576a69ac820f18d2a39647cbe2e12d",
    "squash_commit_sha": null,
    "discussion_locked": null,
    "should_remove_source_branch": null,
    "force_remove_source_branch": null,
    "prepared_at": "2025-10-20T01:55:46.634Z",
    "reference": "!1",
    "references": {
      "short": "!1",
      "relative": "!1",
      "full": "simulationsprojects_bachelorarbeit_ivan_esau/ba_project_b07_battleship!1"
    },
    "web_url": "https://gitlab.nibbler.fh-swf.de/simulationsprojects_bachelorarbeit_ivan_esau/ba_project_b07_battleship/-/merge_requests/1",
    "time_stats": {
      "time_estimate": 0,
      "total_time_spent": 0,
      "human_time_estimate": null,
      "human_total_time_spent": null
    },
    "squash": false,
    "squash_on_merge": false,
    "task_completion_status": {
      "count": 0,
      "completed_count": 0
    },
    "has_conflicts": false,
    "blocking_discussions_resolved": true
  },
  {
    "id": 747,
    "iid": 2,
    "project_id": 210,
    "title": "[US-02] Alternating shooting with feedback",
    "description": "## Description\nImplements alternating shooting functionality for Battleship game with turn management, hit/miss feedback, and duplicate shot prevention.\n\n## Changes\n- **Core Models**: Added ShotResult enum, ShotTracker, GameState for turn management\n- **Game Logic**: Implemented shooting functionality in GameService with turn switching\n- **UI Integration**: Updated Main.java with shooting phase and turn-based gameplay\n- **Testing**: Comprehensive test suite covering all acceptance criteria\n\n## Acceptance Criteria Verified\n✅ **When firing at A1 for the first time, a message should appear showing hit or miss, and that field should become marked.**\n- Tested in GameServiceShootingTest.testPlayerShootingHit() and testPlayerShootingMiss()\n\n✅ **When the same field is targeted again, the shot should not go through, and the next player should then act.**\n- Tested in GameServiceShootingTest.testPlayerShootingAlreadyShot()\n\n✅ **After one shot cycle finishes, the control changes so that only the other player can continue.**\n- Tested in GameServiceShootingTest.testAlternatingTurns()\n\n## Technical Implementation\n- Turn-based shooting system with proper state management\n- Shot validation and duplicate prevention\n- Hit/miss detection with ship damage tracking\n- Game end detection when all ships are sunk\n- Comprehensive test coverage with 25+ test methods\n\n## Dependencies\n- Builds upon ship placement functionality from Issue #1\n- Follows layered architecture pattern from planning documents\n\nCloses #2",
    "state": "opened",
    "created_at": "2025-10-20T02:23:58.397Z",
    "updated_at": "2025-10-20T02:50:32.857Z",
    "merged_by": null,
    "merge_user": null,
    "merged_at": null,
    "closed_by": null,
    "closed_at": null,
    "target_branch": "master",
    "source_branch": "feature/issue-2-us-02-alternating-shooting-wit",
    "user_notes_count": 0,
    "upvotes": 0,
    "downvotes": 0,
    "author": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "assignees": [],
    "assignee": null,
    "reviewers": [],
    "source_project_id": 210,
    "target_project_id": 210,
    "labels": [],
    "draft": false,
    "imported": false,
    "imported_from": "none",
    "work_in_progress": false,
    "milestone": null,
    "merge_when_pipeline_succeeds": false,
    "merge_status": "unchecked",
    "detailed_merge_status": "unchecked",
    "merge_after": null,
    "sha": "3fdd6539f5478d19514235775aa951e99924c46e",
    "merge_commit_sha": null,
    "squash_commit_sha": null,
    "discussion_locked": null,
    "should_remove_source_branch": null,
    "force_remove_source_branch": null,
    "prepared_at": "2025-10-20T02:24:00.477Z",
    "reference": "!2",
    "references": {
      "short": "!2",
      "relative": "!2",
      "full": "simulationsprojects_bachelorarbeit_ivan_esau/ba_project_b07_battleship!2"
    },
    "web_url": "https://gitlab.nibbler.fh-swf.de/simulationsprojects_bachelorarbeit_ivan_esau/ba_project_b07_battleship/-/merge_requests/2",
    "time_stats": {
      "time_estimate": 0,
      "total_time_spent": 0,
      "human_time_estimate": null,
      "human_total_time_spent": null
    },
    "squash": false,
    "squash_on_merge": false,
    "task_completion_status": {
      "count": 0,
      "completed_count": 0
    },
    "has_conflicts": false,
    "blocking_discussions_resolved": true
  },
  {
    "id": 748,
    "iid": 3,
    "project_id": 210,
    "title": "[US-03] Ship damage, announcing sunk, and finishing",
    "description": "## Description\n\nImplements ship damage tracking, sunk detection, game end conditions, and restart functionality for the Battleship game.\n\n## Changes\n\n### Core Features\n- **Ship damage tracking**: Each ship tracks hit positions and remaining health\n- **Sunk detection**: Automatically detects when all ship positions are hit\n- **Game end conditions**: Ends game when all ships of one player are sunk\n- **Restart functionality**: Allows starting a new game with reset boards\n\n### Implementation Details\n- `Ship.java`: Added hit tracking, sunk detection, and health management\n- `GameService.java`: Added shot processing with hit/miss logic and game state management\n- `GameState.java`: Added game status tracking and player switching\n- Comprehensive test coverage for all new functionality\n\n### Acceptance Criteria Met\n✅ **When the last healthy square of a ship gets hit, that ship should be indicated as sunk**\n- Implemented in `Ship.recordHit()` method\n- Returns true when ship is sunk\n- Status method shows \"SUNK\" for sunk ships\n\n✅ **When the final enemy ship is destroyed, the game should end, show who won, and not allow further shooting**\n- Implemented in `GameService.processShot()`\n- Checks if all ships are sunk after each hit\n- Ends game and blocks further inputs\n\n✅ **When a finished game is restarted, both boards become empty and hidden again**\n- Implemented in `GameService.resetGame()`\n- Resets all ships to unplaced state\n- Clears game state for new match\n\n## Testing\n- Comprehensive unit tests for ship damage tracking\n- Integration tests for game flow and end conditions\n- Boundary tests for edge cases\n\nCloses #3",
    "state": "opened",
    "created_at": "2025-10-20T03:32:37.696Z",
    "updated_at": "2025-10-20T03:32:40.298Z",
    "merged_by": null,
    "merge_user": null,
    "merged_at": null,
    "closed_by": null,
    "closed_at": null,
    "target_branch": "master",
    "source_branch": "feature/issue-3-us-03-ship-damage-announcing-s",
    "user_notes_count": 0,
    "upvotes": 0,
    "downvotes": 0,
    "author": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "assignees": [],
    "assignee": null,
    "reviewers": [],
    "source_project_id": 210,
    "target_project_id": 210,
    "labels": [],
    "draft": false,
    "imported": false,
    "imported_from": "none",
    "work_in_progress": false,
    "milestone": null,
    "merge_when_pipeline_succeeds": false,
    "merge_status": "unchecked",
    "detailed_merge_status": "unchecked",
    "merge_after": null,
    "sha": "7751254e333f56795a5bc249989cda658c0ba10d",
    "merge_commit_sha": null,
    "squash_commit_sha": null,
    "discussion_locked": null,
    "should_remove_source_branch": null,
    "force_remove_source_branch": null,
    "prepared_at": "2025-10-20T03:32:40.284Z",
    "reference": "!3",
    "references": {
      "short": "!3",
      "relative": "!3",
      "full": "simulationsprojects_bachelorarbeit_ivan_esau/ba_project_b07_battleship!3"
    },
    "web_url": "https://gitlab.nibbler.fh-swf.de/simulationsprojects_bachelorarbeit_ivan_esau/ba_project_b07_battleship/-/merge_requests/3",
    "time_stats": {
      "time_estimate": 0,
      "total_time_spent": 0,
      "human_time_estimate": null,
      "human_total_time_spent": null
    },
    "squash": false,
    "squash_on_merge": false,
    "task_completion_status": {
      "count": 0,
      "completed_count": 0
    },
    "has_conflicts": false,
    "blocking_discussions_resolved": true
  },
  {
    "id": 749,
    "iid": 4,
    "project_id": 210,
    "title": "[US-04] Playing alone against the computer",
    "description": "## Description\nImplements single-player mode with AI opponent for Battleship game.\n\n## Changes\n- Added AI player interface with Easy and Normal difficulty levels\n- Easy AI makes random valid moves\n- Normal AI uses hunt mode strategy (targets neighboring cells after hits)\n- Comprehensive test coverage for both AI implementations\n- Follows layered architecture pattern from planning documents\n\n## Requirements Implemented\n✅ Single-player mode with automated opponent  \n✅ Computer places ships in valid positions (no overlaps, within boundaries)  \n✅ Computer shoots at coordinates not previously targeted  \n✅ Easy difficulty: Random shooting behavior  \n✅ Normal difficulty: Hunt mode strategy (targets neighbors after hits)  \n\n## Acceptance Criteria Validated\n✅ When single-player mode starts, computer's fleet exists, is valid and hidden  \n✅ When computer makes a move, its shot is at coordinate not previously targeted  \n✅ In Normal mode, if shot hits, following shots try neighboring cells until ship is sunk  \n\n## Technical Details\n- **Package**: `org.example.ai`\n- **Classes**: `AIPlayer` (interface), `EasyAI`, `NormalAI`\n- **Testing**: Comprehensive unit tests with JUnit 5\n- **Architecture**: Follows layered pattern with clear separation of concerns\n\nCloses #4",
    "state": "opened",
    "created_at": "2025-10-20T04:34:25.764Z",
    "updated_at": "2025-10-20T05:12:20.522Z",
    "merged_by": null,
    "merge_user": null,
    "merged_at": null,
    "closed_by": null,
    "closed_at": null,
    "target_branch": "master",
    "source_branch": "feature/issue-4-us-04-playing-alone-against-th",
    "user_notes_count": 0,
    "upvotes": 0,
    "downvotes": 0,
    "author": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "assignees": [],
    "assignee": null,
    "reviewers": [],
    "source_project_id": 210,
    "target_project_id": 210,
    "labels": [],
    "draft": false,
    "imported": false,
    "imported_from": "none",
    "work_in_progress": false,
    "milestone": null,
    "merge_when_pipeline_succeeds": false,
    "merge_status": "unchecked",
    "detailed_merge_status": "unchecked",
    "merge_after": null,
    "sha": "941c9f85f2f480d9ad964f756b2ae6b6bf44f3a0",
    "merge_commit_sha": null,
    "squash_commit_sha": null,
    "discussion_locked": null,
    "should_remove_source_branch": null,
    "force_remove_source_branch": null,
    "prepared_at": "2025-10-20T04:34:27.852Z",
    "reference": "!4",
    "references": {
      "short": "!4",
      "relative": "!4",
      "full": "simulationsprojects_bachelorarbeit_ivan_esau/ba_project_b07_battleship!4"
    },
    "web_url": "https://gitlab.nibbler.fh-swf.de/simulationsprojects_bachelorarbeit_ivan_esau/ba_project_b07_battleship/-/merge_requests/4",
    "time_stats": {
      "time_estimate": 0,
      "total_time_spent": 0,
      "human_time_estimate": null,
      "human_total_time_spent": null
    },
    "squash": false,
    "squash_on_merge": false,
    "task_completion_status": {
      "count": 0,
      "completed_count": 0
    },
    "has_conflicts": false,
    "blocking_discussions_resolved": true
  },
  {
    "id": 750,
    "iid": 5,
    "project_id": 210,
    "title": "[US-05] Saving and restoring the game",
    "description": "## Description\nImplements game save and load functionality for the Battleship game. This feature allows players to save their current game state to a file and later restore it to continue playing from the exact same point.\n\n## Changes\n\n### Core Implementation\n- **GameState.java**: Serializable class that captures complete game state including boards, shots, turn information, difficulty, and timing\n- **FileManager.java**: Utility class for saving/loading game states with comprehensive error handling\n\n### Key Features\n- **Complete State Preservation**: Saves all game elements (boards, ship placements, shots, turn, difficulty, running time)\n- **Hidden State Protection**: Hidden ship placements remain hidden after loading\n- **Error Handling**: Proper handling of missing, corrupted, or incompatible files\n- **File Selection**: Players can choose file location and name\n- **Consistency**: Save/load operations don't affect current game state\n\n### Testing\n- **FileManagerTest.java**: Comprehensive test suite covering:\n  - Successful save/load operations\n  - Error conditions (missing files, corrupted data, empty files)\n  - File path validation\n  - Complete state preservation verification\n\n## Technical Details\n- Uses Java serialization for game state persistence\n- Implements Serializable interface for all game state components\n- Provides default save directory and file naming\n- Includes validation for file paths and permissions\n\n## Acceptance Criteria Verified\n- ✅ If the game is saved and loaded right away, every visible part and all internal values should be identical\n- ✅ If a corrupted file is loaded, an error is displayed and the game remains the same\n- ✅ If a completed game is saved and later loaded, it stays finished and waits for a new start\n\nCloses #5",
    "state": "merged",
    "created_at": "2025-10-20T07:06:39.708Z",
    "updated_at": "2025-10-20T07:09:39.213Z",
    "merged_by": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "merge_user": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "merged_at": "2025-10-20T07:09:39.512Z",
    "closed_by": null,
    "closed_at": null,
    "target_branch": "master",
    "source_branch": "feature/issue-5-us-05-saving-and-restoring-the",
    "user_notes_count": 0,
    "upvotes": 0,
    "downvotes": 0,
    "author": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "assignees": [],
    "assignee": null,
    "reviewers": [],
    "source_project_id": 210,
    "target_project_id": 210,
    "labels": [],
    "draft": false,
    "imported": false,
    "imported_from": "none",
    "work_in_progress": false,
    "milestone": null,
    "merge_when_pipeline_succeeds": false,
    "merge_status": "can_be_merged",
    "detailed_merge_status": "not_open",
    "merge_after": null,
    "sha": "a1c40064071ead640bc5ba36870e897c3f75a6ea",
    "merge_commit_sha": "1878fae7b3b1bfef469ef285e2f3e885c1a4610c",
    "squash_commit_sha": null,
    "discussion_locked": null,
    "should_remove_source_branch": null,
    "force_remove_source_branch": null,
    "prepared_at": "2025-10-20T07:06:42.496Z",
    "reference": "!5",
    "references": {
      "short": "!5",
      "relative": "!5",
      "full": "simulationsprojects_bachelorarbeit_ivan_esau/ba_project_b07_battleship!5"
    },
    "web_url": "https://gitlab.nibbler.fh-swf.de/simulationsprojects_bachelorarbeit_ivan_esau/ba_project_b07_battleship/-/merge_requests/5",
    "time_stats": {
      "time_estimate": 0,
      "total_time_spent": 0,
      "human_time_estimate": null,
      "human_total_time_spent": null
    },
    "squash": false,
    "squash_on_merge": false,
    "task_completion_status": {
      "count": 0,
      "completed_count": 0
    },
    "has_conflicts": false,
    "blocking_discussions_resolved": true
  }
]