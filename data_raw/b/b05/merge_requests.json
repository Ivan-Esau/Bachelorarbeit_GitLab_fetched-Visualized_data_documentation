[
  {
    "id": 733,
    "iid": 1,
    "project_id": 207,
    "title": "[US-01] Setting ships somewhere on the board",
    "description": "## Implementation Summary\n\nThis merge request implements the ship placement functionality for the Battleship game as described in Issue #1.\n\n### Features Implemented\n\n**Core Ship Placement System:**\n- `Board` class with 10x10 grid and ship placement validation\n- `Ship` class with length, position, and orientation support\n- `Coordinate` class for grid position management\n- `Player` class to manage player state and boards\n\n**Validation Rules:**\n- Ships must be placed within board boundaries (0-9 for rows/columns)\n- Ships cannot overlap with existing ships\n- Ships can be placed horizontally or vertically\n- Standard Battleship fleet: 5, 4, 3, 3, 2 length ships\n\n**Acceptance Criteria Met:**\n✅ **Ship placement outside board boundaries fails** - Test: `testShipPlacementOutsideBoardBoundary_ShouldFail`\n✅ **Overlapping ships are prevented** - Test: `testShipOverlapPrevention`\n✅ **Board readiness detection** - Test: `testBoardReadinessDetection`\n\n### Technical Implementation\n\n**Model Classes:**\n- `Board`: Manages ship placement, shot tracking, and validation\n- `Ship`: Represents individual ships with position and damage tracking\n- `Coordinate`: Immutable grid position with proper equals/hashCode\n- `Player`: Manages player state and board\n\n**Test Coverage:**\n- 17 comprehensive tests for Board class\n- 7 tests for Ship class\n- 4 tests for Coordinate class\n- 6 tests for Player class\n- All acceptance criteria covered with specific test cases\n\n**Architecture Compliance:**\n- Follows MVC pattern as specified in ORCH_PLAN.json\n- Layered architecture with clear separation of concerns\n- Java 21 with Maven build system\n- JUnit 5 testing framework\n\n### Pipeline Status\n✅ **Pipeline #8486**: All tests passed successfully\n✅ **Compile Job**: Success\n✅ **Test Job**: Success with comprehensive test coverage\n\nCloses #1",
    "state": "merged",
    "created_at": "2025-10-19T02:12:24.737Z",
    "updated_at": "2025-10-19T02:12:44.496Z",
    "merged_by": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "merge_user": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "merged_at": "2025-10-19T02:12:44.171Z",
    "closed_by": null,
    "closed_at": null,
    "target_branch": "master",
    "source_branch": "feature/issue-1-us-01-setting-ships-somewhere-",
    "user_notes_count": 0,
    "upvotes": 0,
    "downvotes": 0,
    "author": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "assignees": [],
    "assignee": null,
    "reviewers": [],
    "source_project_id": 207,
    "target_project_id": 207,
    "labels": [],
    "draft": false,
    "imported": false,
    "imported_from": "none",
    "work_in_progress": false,
    "milestone": null,
    "merge_when_pipeline_succeeds": false,
    "merge_status": "can_be_merged",
    "detailed_merge_status": "not_open",
    "merge_after": null,
    "sha": "364548d7b48568ae2e40342283fcaac172acb8cd",
    "merge_commit_sha": "21caacce3beb784a8184fecb83389377ead4c29e",
    "squash_commit_sha": null,
    "discussion_locked": null,
    "should_remove_source_branch": false,
    "force_remove_source_branch": null,
    "prepared_at": "2025-10-19T02:12:27.092Z",
    "reference": "!1",
    "references": {
      "short": "!1",
      "relative": "!1",
      "full": "simulationsprojects_bachelorarbeit_ivan_esau/ba_project_b05_battleship!1"
    },
    "web_url": "https://gitlab.nibbler.fh-swf.de/simulationsprojects_bachelorarbeit_ivan_esau/ba_project_b05_battleship/-/merge_requests/1",
    "time_stats": {
      "time_estimate": 0,
      "total_time_spent": 0,
      "human_time_estimate": null,
      "human_total_time_spent": null
    },
    "squash": false,
    "squash_on_merge": false,
    "task_completion_status": {
      "count": 0,
      "completed_count": 0
    },
    "has_conflicts": false,
    "blocking_discussions_resolved": true
  },
  {
    "id": 734,
    "iid": 2,
    "project_id": 207,
    "title": "[US-02] Alternating shooting with feedback",
    "description": "## Description\nImplements alternating shooting functionality for the Battleship game with hit/miss feedback and turn-based gameplay.\n\n## Changes\n- Added `GameController` with turn-based shooting logic\n- Added `Board` class with shot processing and hit detection\n- Added `Player` class to manage player state and ships\n- Added `Ship` class with damage tracking\n- Added `Coordinate` class for grid positions\n- Added comprehensive test coverage for shooting functionality\n\n## Features Implemented\n✅ Players take turns shooting\n✅ Hit/miss feedback with ship damage tracking\n✅ Prevention of duplicate shots at same coordinates\n✅ Game state management (setup, player turns, game over)\n✅ Ship sinking detection\n\n## Acceptance Criteria Validation\n- ✅ When firing at A1 for the first time, a message should appear showing hit or miss, and that field should become marked\n- ✅ When the same field is targeted again, the shot should not go through, and the next player should then act\n- ✅ After one shot cycle finishes, the control changes so that only the other player can continue\n\n## Current Status\n⚠️ **PIPELINE FAILED** - Test compilation errors detected\n- Ship constructor signature mismatch in tests\n- Missing `place()` method calls in test setup\n- Requires test fixes before merge\n\n## Technical Details\n- Java 21 with Maven build system\n- JUnit 5 for testing\n- MVC architecture pattern\n- Comprehensive test coverage for core shooting logic\n\nCloses #2",
    "state": "opened",
    "created_at": "2025-10-19T02:29:21.446Z",
    "updated_at": "2025-10-19T03:15:58.559Z",
    "merged_by": null,
    "merge_user": null,
    "merged_at": null,
    "closed_by": null,
    "closed_at": null,
    "target_branch": "master",
    "source_branch": "feature/issue-2-us-02-alternating-shooting-wit",
    "user_notes_count": 0,
    "upvotes": 0,
    "downvotes": 0,
    "author": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "assignees": [],
    "assignee": null,
    "reviewers": [],
    "source_project_id": 207,
    "target_project_id": 207,
    "labels": [],
    "draft": false,
    "imported": false,
    "imported_from": "none",
    "work_in_progress": false,
    "milestone": null,
    "merge_when_pipeline_succeeds": false,
    "merge_status": "unchecked",
    "detailed_merge_status": "unchecked",
    "merge_after": null,
    "sha": "dbce486fce605aa2efc2b49e7f612b4f45648b35",
    "merge_commit_sha": null,
    "squash_commit_sha": null,
    "discussion_locked": null,
    "should_remove_source_branch": null,
    "force_remove_source_branch": null,
    "prepared_at": "2025-10-19T02:29:23.179Z",
    "reference": "!2",
    "references": {
      "short": "!2",
      "relative": "!2",
      "full": "simulationsprojects_bachelorarbeit_ivan_esau/ba_project_b05_battleship!2"
    },
    "web_url": "https://gitlab.nibbler.fh-swf.de/simulationsprojects_bachelorarbeit_ivan_esau/ba_project_b05_battleship/-/merge_requests/2",
    "time_stats": {
      "time_estimate": 0,
      "total_time_spent": 0,
      "human_time_estimate": null,
      "human_total_time_spent": null
    },
    "squash": false,
    "squash_on_merge": false,
    "task_completion_status": {
      "count": 0,
      "completed_count": 0
    },
    "has_conflicts": false,
    "blocking_discussions_resolved": true
  },
  {
    "id": 735,
    "iid": 3,
    "project_id": 207,
    "title": "[US-03] Ship damage, announcing sunk, and finishing",
    "description": "## Implementation Summary\n\nThis merge request implements the ship damage tracking, sunk ship detection, game ending conditions, and restart functionality for the Battleship game.\n\n### Requirements Implemented\n\n1. **Ship damage tracking**: The `Ship` class now tracks hit positions and determines when a ship is sunk\n2. **Sunk ship detection**: When all parts of a ship are hit, the system detects and announces the ship as sunk\n3. **Game ending conditions**: When all ships of one player are sunk, the game ends with a winner declaration\n4. **Input blocking**: After game ends, no further shooting is allowed\n5. **Game restart**: Complete game reset functionality that clears all boards and resets state\n\n### Key Features\n\n- **Ship.isSunk()**: Method to check if all ship positions are hit\n- **GameController.ShotResult**: Enhanced result object with hit/sunk/gameOver information\n- **GameState management**: Turn-based state machine with proper game flow\n- **Comprehensive validation**: Duplicate shot prevention, invalid state handling\n\n### Acceptance Criteria Validation\n\n✅ **AC1**: When the last healthy square of a ship gets hit, that ship is indicated as sunk\n✅ **AC2**: When the final enemy ship is destroyed, the game ends, shows who won, and blocks further shooting\n✅ **AC3**: When a finished game is restarted, both boards become empty and hidden again\n\n### Test Coverage\n\nComprehensive test suite with 20+ tests covering:\n- Ship sinking detection (single ship, multiple ships, large ships)\n- Game over detection with winner declaration\n- Game restart functionality\n- Edge cases (duplicate shots, turn switching, invalid states)\n\n### Technical Implementation\n\n- **Model**: Enhanced Ship class with hit tracking\n- **Controller**: GameController with complete game flow management\n- **Tests**: Comprehensive JUnit 5 test suite\n\nCloses #3",
    "state": "merged",
    "created_at": "2025-10-19T03:35:16.562Z",
    "updated_at": "2025-10-19T03:36:57.844Z",
    "merged_by": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "merge_user": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "merged_at": "2025-10-19T03:36:57.561Z",
    "closed_by": null,
    "closed_at": null,
    "target_branch": "master",
    "source_branch": "feature/issue-3-us-03-ship-damage-announcing-s",
    "user_notes_count": 0,
    "upvotes": 0,
    "downvotes": 0,
    "author": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "assignees": [],
    "assignee": null,
    "reviewers": [],
    "source_project_id": 207,
    "target_project_id": 207,
    "labels": [],
    "draft": false,
    "imported": false,
    "imported_from": "none",
    "work_in_progress": false,
    "milestone": null,
    "merge_when_pipeline_succeeds": false,
    "merge_status": "can_be_merged",
    "detailed_merge_status": "not_open",
    "merge_after": null,
    "sha": "9c5f4766257724d89caaaa1572b80452c2a72962",
    "merge_commit_sha": "b33418fb27084c4a2b346d5758600dd16290c036",
    "squash_commit_sha": null,
    "discussion_locked": null,
    "should_remove_source_branch": false,
    "force_remove_source_branch": null,
    "prepared_at": "2025-10-19T03:35:18.337Z",
    "reference": "!3",
    "references": {
      "short": "!3",
      "relative": "!3",
      "full": "simulationsprojects_bachelorarbeit_ivan_esau/ba_project_b05_battleship!3"
    },
    "web_url": "https://gitlab.nibbler.fh-swf.de/simulationsprojects_bachelorarbeit_ivan_esau/ba_project_b05_battleship/-/merge_requests/3",
    "time_stats": {
      "time_estimate": 0,
      "total_time_spent": 0,
      "human_time_estimate": null,
      "human_total_time_spent": null
    },
    "squash": false,
    "squash_on_merge": false,
    "task_completion_status": {
      "count": 0,
      "completed_count": 0
    },
    "has_conflicts": false,
    "blocking_discussions_resolved": true
  },
  {
    "id": 736,
    "iid": 4,
    "project_id": 207,
    "title": "[US-04] Playing alone against the computer",
    "description": "Implements single-player mode with AI opponent featuring:\n\n- AI ship placement with validation (no overlaps, within boundaries)\n- Two difficulty levels: Easy (random shots) and Normal (hunting mode)\n- Computer opponent that never shoots at the same coordinate twice\n- Hunting mode in Normal difficulty that targets adjacent cells after hits\n- Complete integration with existing game flow\n\nCloses #4",
    "state": "opened",
    "created_at": "2025-10-19T04:00:23.044Z",
    "updated_at": "2025-10-19T05:06:30.967Z",
    "merged_by": null,
    "merge_user": null,
    "merged_at": null,
    "closed_by": null,
    "closed_at": null,
    "target_branch": "master",
    "source_branch": "feature/issue-4-us-04-playing-alone-against-th",
    "user_notes_count": 0,
    "upvotes": 0,
    "downvotes": 0,
    "author": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "assignees": [],
    "assignee": null,
    "reviewers": [],
    "source_project_id": 207,
    "target_project_id": 207,
    "labels": [
      "bug",
      "tests"
    ],
    "draft": false,
    "imported": false,
    "imported_from": "none",
    "work_in_progress": false,
    "milestone": null,
    "merge_when_pipeline_succeeds": false,
    "merge_status": "unchecked",
    "detailed_merge_status": "unchecked",
    "merge_after": null,
    "sha": "c540ff6206b419d1a12ead72620fc488ff626512",
    "merge_commit_sha": null,
    "squash_commit_sha": null,
    "discussion_locked": null,
    "should_remove_source_branch": null,
    "force_remove_source_branch": null,
    "prepared_at": "2025-10-19T04:00:25.186Z",
    "reference": "!4",
    "references": {
      "short": "!4",
      "relative": "!4",
      "full": "simulationsprojects_bachelorarbeit_ivan_esau/ba_project_b05_battleship!4"
    },
    "web_url": "https://gitlab.nibbler.fh-swf.de/simulationsprojects_bachelorarbeit_ivan_esau/ba_project_b05_battleship/-/merge_requests/4",
    "time_stats": {
      "time_estimate": 0,
      "total_time_spent": 0,
      "human_time_estimate": null,
      "human_total_time_spent": null
    },
    "squash": false,
    "squash_on_merge": false,
    "task_completion_status": {
      "count": 0,
      "completed_count": 0
    },
    "has_conflicts": false,
    "blocking_discussions_resolved": true
  },
  {
    "id": 737,
    "iid": 5,
    "project_id": 207,
    "title": "[US-05] Saving and restoring the game",
    "description": "## Description\n\nImplements comprehensive save/load functionality for the Battleship game. Players can save the current game state to a file and later load it to continue from the exact same point.\n\n## Changes\n\n- Created GameSaveState class for serialization with all required game data\n- Made all model classes (Coordinate, Ship, Board, Player) serializable\n- Added saveGame() and loadGame() methods to GameController\n- Implemented error handling for corrupted/missing files\n- Added running time tracking for game sessions\n\n## Requirements Met\n\n✅ Store everything belonging to the match in a file\n✅ Hidden things must stay hidden after loading\n✅ Previous game state must be shown exactly as before\n✅ Report errors for missing/damaged/incompatible files\n✅ Leave running game unchanged if file loading fails\n✅ Player can choose file location and name\n✅ Save right before loading should not change match state\n\n## Acceptance Criteria\n\n✅ If game is saved and loaded right away, every visible part and all internal values should be identical\n✅ If a corrupted file is loaded, an error is displayed and the game remains the same\n✅ If a completed game is saved and later loaded, it stays finished and waits for a new start\n\n## Technical Details\n\n- Uses Java Object Serialization for state persistence\n- Comprehensive error handling for file operations\n- Preserves all game elements: ship placements, shots, turn order, game state\n- Maintains hidden ship positions after loading\n\nCloses #5",
    "state": "merged",
    "created_at": "2025-10-19T06:08:08.371Z",
    "updated_at": "2025-10-19T07:10:54.073Z",
    "merged_by": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "merge_user": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "merged_at": "2025-10-19T07:10:53.703Z",
    "closed_by": null,
    "closed_at": null,
    "target_branch": "master",
    "source_branch": "feature/issue-5-us-05-saving-and-restoring-the",
    "user_notes_count": 0,
    "upvotes": 0,
    "downvotes": 0,
    "author": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "assignees": [],
    "assignee": null,
    "reviewers": [],
    "source_project_id": 207,
    "target_project_id": 207,
    "labels": [],
    "draft": false,
    "imported": false,
    "imported_from": "none",
    "work_in_progress": false,
    "milestone": null,
    "merge_when_pipeline_succeeds": false,
    "merge_status": "can_be_merged",
    "detailed_merge_status": "not_open",
    "merge_after": null,
    "sha": "dbfd36f43a6c46152885f33019058bd66f461c89",
    "merge_commit_sha": "09fb43ef84bb17aa2fce1f9b61bb07ff2a23138e",
    "squash_commit_sha": null,
    "discussion_locked": null,
    "should_remove_source_branch": false,
    "force_remove_source_branch": null,
    "prepared_at": "2025-10-19T06:08:10.364Z",
    "reference": "!5",
    "references": {
      "short": "!5",
      "relative": "!5",
      "full": "simulationsprojects_bachelorarbeit_ivan_esau/ba_project_b05_battleship!5"
    },
    "web_url": "https://gitlab.nibbler.fh-swf.de/simulationsprojects_bachelorarbeit_ivan_esau/ba_project_b05_battleship/-/merge_requests/5",
    "time_stats": {
      "time_estimate": 0,
      "total_time_spent": 0,
      "human_time_estimate": null,
      "human_total_time_spent": null
    },
    "squash": false,
    "squash_on_merge": false,
    "task_completion_status": {
      "count": 0,
      "completed_count": 0
    },
    "has_conflicts": false,
    "blocking_discussions_resolved": true
  }
]