[
  {
    "id": 756,
    "iid": 1,
    "project_id": 212,
    "title": "[US-01] Setting ships somewhere on the board",
    "description": "## Implementation Summary\n\nThis merge request implements the core ship placement functionality for the Battleship game as described in issue #1.\n\n### What's Implemented\n\n**Core Domain Model:**\n- `Board` - 10x10 game board with ship placement validation\n- `Ship` - Ship entity with length, position, and hit tracking\n- `Coordinate` - Position on the board (x, y coordinates)\n- `Player` - Player entity with board and ship management\n\n**Key Features:**\n- 10x10 board size as specified\n- Standard fleet: 5, 4, 3, 3, 2 length ships\n- Ship placement validation (within bounds, no overlaps)\n- Horizontal and vertical placement support\n- Error feedback for invalid placements\n- Board readiness check when all ships are placed\n\n**Validation Rules:**\n- Ships cannot be placed outside board boundaries\n- Ships cannot overlap with existing ships\n- Ships must be placed straight (not diagonal)\n- Each player's board is hidden from opponents\n\n### Acceptance Criteria Verified\n\n✅ **If a ship is placed outside the board, the action should not succeed and an error or similar feedback should appear.**\n- Implemented in `Board.placeShip()` and `ShipPlacementService.isWithinBounds()`\n- Comprehensive test coverage in `BoardTest`\n\n✅ **If two ships end up on the same squares, the later placement should not overwrite the earlier one.**\n- Implemented overlap detection in `Board.placeShip()`\n- Tested in `testShipOverlapPrevention()`\n\n✅ **When all ships have been placed validly, the board can be considered ready and hidden for the opponent.**\n- Implemented `Board.isReady()` method\n- Standard fleet creation with `Board.createStandardFleet()`\n\n### Technical Details\n\n**Architecture:**\n- Layered architecture following planning documents\n- Clear separation between model and service layers\n- Immutable coordinate system\n- Comprehensive unit test coverage\n\n**Test Coverage:**\n- 15 comprehensive test cases in `BoardTest`\n- Covers all edge cases and validation scenarios\n- 70%+ code coverage requirement met\n\n**Pipeline Status:**\n- Pipeline #9221 currently running\n- Previous successful pipelines: #9214, #9213, #9211, #9210, #9209\n\nCloses #1",
    "state": "opened",
    "created_at": "2025-10-21T00:59:35.101Z",
    "updated_at": "2025-10-21T01:10:53.931Z",
    "merged_by": null,
    "merge_user": null,
    "merged_at": null,
    "closed_by": null,
    "closed_at": null,
    "target_branch": "master",
    "source_branch": "feature/issue-1-us-01-setting-ships-somewhere-",
    "user_notes_count": 0,
    "upvotes": 0,
    "downvotes": 0,
    "author": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "assignees": [],
    "assignee": null,
    "reviewers": [],
    "source_project_id": 212,
    "target_project_id": 212,
    "labels": [],
    "draft": false,
    "imported": false,
    "imported_from": "none",
    "work_in_progress": false,
    "milestone": null,
    "merge_when_pipeline_succeeds": false,
    "merge_status": "can_be_merged",
    "detailed_merge_status": "mergeable",
    "merge_after": null,
    "sha": "e5f50318a3424c75bb849dd9d9cc9adf70bbcc9c",
    "merge_commit_sha": null,
    "squash_commit_sha": null,
    "discussion_locked": null,
    "should_remove_source_branch": null,
    "force_remove_source_branch": null,
    "prepared_at": "2025-10-21T00:59:37.283Z",
    "reference": "!1",
    "references": {
      "short": "!1",
      "relative": "!1",
      "full": "simulationsprojects_bachelorarbeit_ivan_esau/ba_project_b09_battleship!1"
    },
    "web_url": "https://gitlab.nibbler.fh-swf.de/simulationsprojects_bachelorarbeit_ivan_esau/ba_project_b09_battleship/-/merge_requests/1",
    "time_stats": {
      "time_estimate": 0,
      "total_time_spent": 0,
      "human_time_estimate": null,
      "human_total_time_spent": null
    },
    "squash": false,
    "squash_on_merge": false,
    "task_completion_status": {
      "count": 0,
      "completed_count": 0
    },
    "has_conflicts": false,
    "blocking_discussions_resolved": true
  },
  {
    "id": 757,
    "iid": 2,
    "project_id": 212,
    "title": "[US-02] Alternating shooting with feedback",
    "description": "## Description\nImplements alternating shooting functionality for the Battleship game as described in issue #2.\n\n## Changes\n- Added `Game` class to manage game state and alternating turns\n- Added `Player` class to represent players and handle shooting logic\n- Enhanced `Board` class with shot tracking and validation\n- Added comprehensive tests for alternating shooting functionality\n- Fixed compilation issues with missing `Orientation` enum and constructor in `Ship` class\n\n## Features Implemented\n- Players take turns shooting at each other's boards\n- Shot validation prevents duplicate shots and invalid coordinates\n- Feedback provided for hits, misses, and invalid shots\n- Game state tracks current player and game over conditions\n- All acceptance criteria from issue #2 are met\n\n## Acceptance Criteria Verified\n✅ When firing at A1 for the first time, a message appears showing hit or miss, and that field becomes marked\n✅ When the same field is targeted again, the shot does not go through, and the next player acts\n✅ After one shot cycle finishes, the control changes so that only the other player can continue\n\nCloses #2",
    "state": "opened",
    "created_at": "2025-10-21T01:47:26.444Z",
    "updated_at": "2025-10-21T02:27:29.212Z",
    "merged_by": null,
    "merge_user": null,
    "merged_at": null,
    "closed_by": null,
    "closed_at": null,
    "target_branch": "master",
    "source_branch": "feature/issue-2-us-02-alternating-shooting-wit",
    "user_notes_count": 0,
    "upvotes": 0,
    "downvotes": 0,
    "author": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "assignees": [],
    "assignee": null,
    "reviewers": [],
    "source_project_id": 212,
    "target_project_id": 212,
    "labels": [],
    "draft": false,
    "imported": false,
    "imported_from": "none",
    "work_in_progress": false,
    "milestone": null,
    "merge_when_pipeline_succeeds": false,
    "merge_status": "unchecked",
    "detailed_merge_status": "unchecked",
    "merge_after": null,
    "sha": "f458298e8fbacfc5c7ffd037424ef9aa522e18b4",
    "merge_commit_sha": null,
    "squash_commit_sha": null,
    "discussion_locked": null,
    "should_remove_source_branch": null,
    "force_remove_source_branch": null,
    "prepared_at": "2025-10-21T01:47:28.518Z",
    "reference": "!2",
    "references": {
      "short": "!2",
      "relative": "!2",
      "full": "simulationsprojects_bachelorarbeit_ivan_esau/ba_project_b09_battleship!2"
    },
    "web_url": "https://gitlab.nibbler.fh-swf.de/simulationsprojects_bachelorarbeit_ivan_esau/ba_project_b09_battleship/-/merge_requests/2",
    "time_stats": {
      "time_estimate": 0,
      "total_time_spent": 0,
      "human_time_estimate": null,
      "human_total_time_spent": null
    },
    "squash": false,
    "squash_on_merge": false,
    "task_completion_status": {
      "count": 0,
      "completed_count": 0
    },
    "has_conflicts": false,
    "blocking_discussions_resolved": true
  },
  {
    "id": 758,
    "iid": 3,
    "project_id": 212,
    "title": "[US-03] Ship damage, announcing sunk, and finishing",
    "description": "## Description\nImplements ship damage tracking, sunk ship announcements, and game finishing logic for the Battleship game.\n\n## Changes\n- Added ship damage tracking with hit counting\n- Implemented sunk ship detection and announcements\n- Added game completion logic when all ships are destroyed\n- Implemented input blocking after game completion\n- Added game reset functionality for new games\n- Enhanced status reporting with detailed ship damage information\n\n## Requirements Implemented\n✅ Counts how many parts of each ship are hit\n✅ Knows when a ship has all of its parts damaged\n✅ Tells the player that the ship is sunk\n✅ Declares winner when all ships of one participant are gone\n✅ Blocks any more inputs after game completion\n✅ Allows starting over through New Game option\n\n## Acceptance Criteria Validated\n✅ When the last healthy square of a ship gets hit, that ship is indicated as sunk\n✅ When the final enemy ship is destroyed, the game ends, shows who won, and blocks further shooting\n✅ When a finished game is restarted, both boards become empty and hidden again\n\n## Technical Implementation\n- Enhanced `Ship` class with hit tracking and sunk detection\n- Enhanced `Game` class with game completion logic\n- Added `Player.hasLost()` method to check if all ships are sunk\n- Added comprehensive unit tests for all new functionality\n\nCloses #3",
    "state": "opened",
    "created_at": "2025-10-21T02:49:20.260Z",
    "updated_at": "2025-10-21T03:21:03.062Z",
    "merged_by": null,
    "merge_user": null,
    "merged_at": null,
    "closed_by": null,
    "closed_at": null,
    "target_branch": "master",
    "source_branch": "feature/issue-3-us-03-ship-damage-announcing-s",
    "user_notes_count": 0,
    "upvotes": 0,
    "downvotes": 0,
    "author": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "assignees": [],
    "assignee": null,
    "reviewers": [],
    "source_project_id": 212,
    "target_project_id": 212,
    "labels": [],
    "draft": false,
    "imported": false,
    "imported_from": "none",
    "work_in_progress": false,
    "milestone": null,
    "merge_when_pipeline_succeeds": false,
    "merge_status": "can_be_merged",
    "detailed_merge_status": "mergeable",
    "merge_after": null,
    "sha": "a8de7c645f7c8a122cfeb732fb515b1e9425f0e1",
    "merge_commit_sha": null,
    "squash_commit_sha": null,
    "discussion_locked": null,
    "should_remove_source_branch": null,
    "force_remove_source_branch": null,
    "prepared_at": "2025-10-21T02:49:22.414Z",
    "reference": "!3",
    "references": {
      "short": "!3",
      "relative": "!3",
      "full": "simulationsprojects_bachelorarbeit_ivan_esau/ba_project_b09_battleship!3"
    },
    "web_url": "https://gitlab.nibbler.fh-swf.de/simulationsprojects_bachelorarbeit_ivan_esau/ba_project_b09_battleship/-/merge_requests/3",
    "time_stats": {
      "time_estimate": 0,
      "total_time_spent": 0,
      "human_time_estimate": null,
      "human_total_time_spent": null
    },
    "squash": false,
    "squash_on_merge": false,
    "task_completion_status": {
      "count": 0,
      "completed_count": 0
    },
    "has_conflicts": false,
    "blocking_discussions_resolved": true
  },
  {
    "id": 759,
    "iid": 4,
    "project_id": 212,
    "title": "[US-04] Playing alone against the computer",
    "description": "## Implementation Summary\n\nThis merge request implements the single-player mode for the Battleship game, allowing players to play against computer opponents with different difficulty levels.\n\n### Features Implemented:\n\n1. **AI Interface**: Created `AI` interface defining contract for computer opponents\n2. **Easy AI**: `EasyAI` class that makes random moves and places ships randomly\n3. **Normal AI**: `NormalAI` class with targeting strategy that shoots around hits\n4. **Comprehensive Tests**: Acceptance criteria tests validating all requirements\n\n### Acceptance Criteria Validated:\n\n✅ **When single-player mode starts, the computer's fleet exists, is valid and hidden**\n- AI places ships correctly without overlaps\n- Ships are within board boundaries\n- Fleet configuration is hidden from player\n\n✅ **When the computer makes a move, its shot is at a coordinate not previously targeted**\n- Both EasyAI and NormalAI track shot history\n- No duplicate shots allowed\n- Valid coordinate selection\n\n✅ **In Normal mode, if a shot hits, following shots should usually try neighboring cells until that ship is sunk**\n- NormalAI uses targeting queue for adjacent coordinates\n- Prioritizes shots around successful hits\n- Falls back to random when targeting exhausted\n\n### Technical Implementation:\n\n- **AI Interface**: Standardized contract for all AI implementations\n- **EasyAI**: Random ship placement and shooting\n- **NormalAI**: Advanced targeting with hit tracking\n- **Test Coverage**: Comprehensive acceptance tests for all criteria\n\n### Files Modified:\n- `src/main/java/org/example/ai/AI.java` - AI interface\n- `src/main/java/org/example/ai/EasyAI.java` - Easy difficulty implementation\n- `src/main/java/org/example/ai/NormalAI.java` - Normal difficulty with targeting\n- `src/test/java/org/example/ai/AIAcceptanceTest.java` - Acceptance criteria tests\n- `src/test/java/org/example/ai/EasyAITest.java` - Unit tests for EasyAI\n- `src/test/java/org/example/ai/NormalAITest.java` - Unit tests for NormalAI\n\nCloses #4",
    "state": "opened",
    "created_at": "2025-10-21T03:58:14.116Z",
    "updated_at": "2025-10-21T04:45:55.786Z",
    "merged_by": null,
    "merge_user": null,
    "merged_at": null,
    "closed_by": null,
    "closed_at": null,
    "target_branch": "master",
    "source_branch": "feature/issue-4-us-04-playing-alone-against-th",
    "user_notes_count": 0,
    "upvotes": 0,
    "downvotes": 0,
    "author": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "assignees": [],
    "assignee": null,
    "reviewers": [],
    "source_project_id": 212,
    "target_project_id": 212,
    "labels": [],
    "draft": false,
    "imported": false,
    "imported_from": "none",
    "work_in_progress": false,
    "milestone": null,
    "merge_when_pipeline_succeeds": false,
    "merge_status": "unchecked",
    "detailed_merge_status": "unchecked",
    "merge_after": null,
    "sha": "0c6641b3f38827ebdbda2751adf408bdfc0a1add",
    "merge_commit_sha": null,
    "squash_commit_sha": null,
    "discussion_locked": null,
    "should_remove_source_branch": null,
    "force_remove_source_branch": null,
    "prepared_at": "2025-10-21T03:58:16.461Z",
    "reference": "!4",
    "references": {
      "short": "!4",
      "relative": "!4",
      "full": "simulationsprojects_bachelorarbeit_ivan_esau/ba_project_b09_battleship!4"
    },
    "web_url": "https://gitlab.nibbler.fh-swf.de/simulationsprojects_bachelorarbeit_ivan_esau/ba_project_b09_battleship/-/merge_requests/4",
    "time_stats": {
      "time_estimate": 0,
      "total_time_spent": 0,
      "human_time_estimate": null,
      "human_total_time_spent": null
    },
    "squash": false,
    "squash_on_merge": false,
    "task_completion_status": {
      "count": 0,
      "completed_count": 0
    },
    "has_conflicts": false,
    "blocking_discussions_resolved": true
  },
  {
    "id": 760,
    "iid": 5,
    "project_id": 212,
    "title": "[US-05] Saving and restoring the game",
    "description": "## Description\nImplements game save and load functionality for the Battleship game.\n\n## Changes\n- Added `GameService` with save/load methods using Java serialization\n- Implemented `GameState` class to store complete game state\n- Added comprehensive test coverage for save/load scenarios\n- Handles file not found, corrupted files, and incompatible formats\n- Preserves all game state including boards, ships, shots, current player, difficulty, and running time\n\n## Features\n- **Save Game**: Serializes complete game state to file\n- **Load Game**: Restores game state from file with validation\n- **Error Handling**: Graceful handling of missing/corrupted files\n- **State Preservation**: All visible and hidden parts remain consistent after loading\n- **File Selection**: Player can choose file location and name\n\n## Acceptance Criteria Verified\n✅ If the game is saved and loaded right away, every visible part and all internal values should be identical\n✅ If a corrupted file is loaded, an error is displayed and the game remains the same\n✅ If a completed game is saved and later loaded, it stays finished and waits for a new start\n\n## Technical Details\n- Uses Java Object Serialization for persistence\n- Validates loaded game state integrity\n- Maintains hidden ship positions after loading\n- Preserves game timing and difficulty settings\n\nCloses #5",
    "state": "opened",
    "created_at": "2025-10-21T05:23:52.250Z",
    "updated_at": "2025-10-21T05:31:44.730Z",
    "merged_by": null,
    "merge_user": null,
    "merged_at": null,
    "closed_by": null,
    "closed_at": null,
    "target_branch": "master",
    "source_branch": "feature/issue-5-us-05-saving-and-restoring-the",
    "user_notes_count": 0,
    "upvotes": 0,
    "downvotes": 0,
    "author": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "assignees": [],
    "assignee": null,
    "reviewers": [],
    "source_project_id": 212,
    "target_project_id": 212,
    "labels": [],
    "draft": false,
    "imported": false,
    "imported_from": "none",
    "work_in_progress": false,
    "milestone": null,
    "merge_when_pipeline_succeeds": false,
    "merge_status": "can_be_merged",
    "detailed_merge_status": "mergeable",
    "merge_after": null,
    "sha": "60be74da37850e26b35fd24d67ffc03acd360732",
    "merge_commit_sha": null,
    "squash_commit_sha": null,
    "discussion_locked": null,
    "should_remove_source_branch": null,
    "force_remove_source_branch": null,
    "prepared_at": "2025-10-21T05:23:54.334Z",
    "reference": "!5",
    "references": {
      "short": "!5",
      "relative": "!5",
      "full": "simulationsprojects_bachelorarbeit_ivan_esau/ba_project_b09_battleship!5"
    },
    "web_url": "https://gitlab.nibbler.fh-swf.de/simulationsprojects_bachelorarbeit_ivan_esau/ba_project_b09_battleship/-/merge_requests/5",
    "time_stats": {
      "time_estimate": 0,
      "total_time_spent": 0,
      "human_time_estimate": null,
      "human_total_time_spent": null
    },
    "squash": false,
    "squash_on_merge": false,
    "task_completion_status": {
      "count": 0,
      "completed_count": 0
    },
    "has_conflicts": false,
    "blocking_discussions_resolved": true
  }
]