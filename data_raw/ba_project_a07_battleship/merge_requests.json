[
  {
    "id": 677,
    "iid": 1,
    "project_id": 192,
    "title": "[US-01] Place fleet on a concealed board",
    "description": "## Implementation Summary\n\nThis merge request implements the foundation user story for the Battleship game - placing a fleet on a concealed board.\n\n### Requirements Implemented\n\n✅ **10×10 grid per player** - Board class with 10x10 grid implementation\n✅ **Standard fleet with ship lengths** - ShipType enum with Carrier (5), Battleship (4), Destroyer (3), Submarine (3), Patrol Boat (2)\n✅ **Placement validation** - Horizontal/vertical placement with rejection of diagonal, overlapping, or out-of-bounds placements\n✅ **Concealed ship locations** - Each player's ship locations remain hidden from opponent\n\n### Core Entities Created\n\n- **Board**: 10x10 grid with ship placement and shot tracking\n- **Ship**: Individual ship with type, positions, and damage tracking\n- **Coordinate**: Grid position management\n- **ShipType**: Enum with standard fleet ship types and lengths\n- **Game**: Main game controller (foundation for future stories)\n- **Player**: Base player class\n- **GameState**: Game state management\n\n### Acceptance Criteria Verified\n\n✅ **AC1**: Given a ship partly outside the grid, when placement is attempted, then the system rejects it with an error and no placement occurs\n✅ **AC2**: Given two ships sharing any square, when the second is placed, then placement is rejected and existing ships remain unchanged\n✅ **AC3**: Given a valid layout, when all ships are placed, then the board is marked ready and remains hidden from the opponent\n\n### Technical Details\n\n- Java 21 with Maven build system\n- JUnit 5 tests with comprehensive coverage\n- Layered architecture following planning documents\n- All tests passing in successful pipeline #6565\n\nCloses #1",
    "state": "opened",
    "created_at": "2025-10-13T23:51:49.040Z",
    "updated_at": "2025-10-14T00:27:12.122Z",
    "merged_by": null,
    "merge_user": null,
    "merged_at": null,
    "closed_by": null,
    "closed_at": null,
    "target_branch": "master",
    "source_branch": "feature/issue-1-us-01-place-fleet-on-a-conceal",
    "user_notes_count": 0,
    "upvotes": 0,
    "downvotes": 0,
    "author": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "assignees": [],
    "assignee": null,
    "reviewers": [],
    "source_project_id": 192,
    "target_project_id": 192,
    "labels": [],
    "draft": false,
    "imported": false,
    "imported_from": "none",
    "work_in_progress": false,
    "milestone": null,
    "merge_when_pipeline_succeeds": false,
    "merge_status": "unchecked",
    "detailed_merge_status": "unchecked",
    "merge_after": null,
    "sha": "42c5f313aff14271e660788d1800367c46342f72",
    "merge_commit_sha": null,
    "squash_commit_sha": null,
    "discussion_locked": null,
    "should_remove_source_branch": null,
    "force_remove_source_branch": null,
    "prepared_at": "2025-10-13T23:51:51.258Z",
    "reference": "!1",
    "references": {
      "short": "!1",
      "relative": "!1",
      "full": "simulationsprojects_bachelorarbeit_ivan_esau/ba_project_a07_battleship!1"
    },
    "web_url": "https://gitlab.nibbler.fh-swf.de/simulationsprojects_bachelorarbeit_ivan_esau/ba_project_a07_battleship/-/merge_requests/1",
    "time_stats": {
      "time_estimate": 0,
      "total_time_spent": 0,
      "human_time_estimate": null,
      "human_total_time_spent": null
    },
    "squash": false,
    "squash_on_merge": false,
    "task_completion_status": {
      "count": 0,
      "completed_count": 0
    },
    "has_conflicts": false,
    "blocking_discussions_resolved": true
  },
  {
    "id": 678,
    "iid": 2,
    "project_id": 192,
    "title": "[US-02] Take turns firing with hit/miss feedback",
    "description": "## Implementation Summary\n\nThis merge request implements the turn-based firing mechanics for the Battleship game as specified in Issue #2.\n\n### Requirements Implemented\n\n1. **Enforce alternating turns** - Game logic ensures players take turns\n2. **Target coordinate selection** - Players can select coordinates on opponent's grid\n3. **Hit/miss feedback** - Immediate feedback with ShotResult class\n4. **Prevent duplicate firing** - Coordinate tracking prevents repeated shots\n\n### Key Features Added\n\n- `ShotResult` class to encapsulate shot outcomes (HIT, MISS, ALREADY_TARGETED)\n- Turn management in `Game` class\n- Coordinate validation and tracking\n- Comprehensive test coverage for all acceptance criteria\n\n### Acceptance Criteria Verified\n\n- ✅ Given A1 has not been targeted, when the player fires at A1, then the result is shown (hit/miss) and A1 becomes marked as used\n- ✅ Given A1 is already targeted, when the player attempts A1 again, then the system blocks the action and preserves turn order rules\n- ✅ Given a turn completes, when control passes, then only the next player can act\n\n### Pipeline Status\n- Previous successful pipeline: #6603 ✅\n- Current pipeline: #6616 (running)\n\nCloses #2",
    "state": "opened",
    "created_at": "2025-10-14T00:49:02.733Z",
    "updated_at": "2025-10-14T01:26:27.558Z",
    "merged_by": null,
    "merge_user": null,
    "merged_at": null,
    "closed_by": null,
    "closed_at": null,
    "target_branch": "master",
    "source_branch": "feature/issue-2-us-02-take-turns-firing-with-h",
    "user_notes_count": 0,
    "upvotes": 0,
    "downvotes": 0,
    "author": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "assignees": [],
    "assignee": null,
    "reviewers": [],
    "source_project_id": 192,
    "target_project_id": 192,
    "labels": [],
    "draft": false,
    "imported": false,
    "imported_from": "none",
    "work_in_progress": false,
    "milestone": null,
    "merge_when_pipeline_succeeds": false,
    "merge_status": "unchecked",
    "detailed_merge_status": "unchecked",
    "merge_after": null,
    "sha": "6b742e44193c1808424c95feed2da30fef626723",
    "merge_commit_sha": null,
    "squash_commit_sha": null,
    "discussion_locked": null,
    "should_remove_source_branch": null,
    "force_remove_source_branch": null,
    "prepared_at": "2025-10-14T00:49:04.730Z",
    "reference": "!2",
    "references": {
      "short": "!2",
      "relative": "!2",
      "full": "simulationsprojects_bachelorarbeit_ivan_esau/ba_project_a07_battleship!2"
    },
    "web_url": "https://gitlab.nibbler.fh-swf.de/simulationsprojects_bachelorarbeit_ivan_esau/ba_project_a07_battleship/-/merge_requests/2",
    "time_stats": {
      "time_estimate": 0,
      "total_time_spent": 0,
      "human_time_estimate": null,
      "human_total_time_spent": null
    },
    "squash": false,
    "squash_on_merge": false,
    "task_completion_status": {
      "count": 0,
      "completed_count": 0
    },
    "has_conflicts": false,
    "blocking_discussions_resolved": true
  },
  {
    "id": 679,
    "iid": 3,
    "project_id": 192,
    "title": "[US-03] Track ship damage, announce sunk, and end the game",
    "description": "## Description\n\nThis merge request implements the third user story for the Battleship game: tracking ship damage, announcing when ships are sunk, and ending the game when a fleet is destroyed.\n\n## Requirements Implemented\n\n1. **Track hits per ship** - Implemented damage tracking for each ship\n2. **Announce ship as 'sunk'** - Added logic to detect when all squares of a ship are hit\n3. **End game when fleet destroyed** - Added victory detection and game end logic\n4. **Provide New Game functionality** - Implemented game reset capability\n\n## Acceptance Criteria Verified\n\n- ✅ **Given the last undamaged square of a ship is hit, when the result is processed, then that ship is announced 'sunk'.**\n- ✅ **Given the final enemy ship is sunk, when the board updates, then the match ends, the winner is indicated, and no further shots are allowed.**\n- ✅ **Given a finished match, when New Game is chosen, then both boards reset to covered, unplaced state.**\n\n## Technical Implementation\n\n- Added `Ship` entity with damage tracking and sunk status\n- Enhanced `Game` class with victory detection logic\n- Implemented game state management for end-game scenarios\n- Added comprehensive test coverage for all acceptance criteria\n\n## Testing\n\nAll acceptance criteria are covered by unit tests in `Issue3AcceptanceCriteriaTest.java`:\n- Test for ship sinking detection\n- Test for game end condition\n- Test for new game functionality\n\nCloses #3",
    "state": "opened",
    "created_at": "2025-10-14T02:16:58.019Z",
    "updated_at": "2025-10-14T03:29:28.064Z",
    "merged_by": null,
    "merge_user": null,
    "merged_at": null,
    "closed_by": null,
    "closed_at": null,
    "target_branch": "master",
    "source_branch": "feature/issue-3-us-03-track-ship-damage-announ",
    "user_notes_count": 0,
    "upvotes": 0,
    "downvotes": 0,
    "author": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "assignees": [],
    "assignee": null,
    "reviewers": [],
    "source_project_id": 192,
    "target_project_id": 192,
    "labels": [],
    "draft": false,
    "imported": false,
    "imported_from": "none",
    "work_in_progress": false,
    "milestone": null,
    "merge_when_pipeline_succeeds": false,
    "merge_status": "unchecked",
    "detailed_merge_status": "unchecked",
    "merge_after": null,
    "sha": "9877ce4d955b0561b25fa3503d27c35f7b954918",
    "merge_commit_sha": null,
    "squash_commit_sha": null,
    "discussion_locked": null,
    "should_remove_source_branch": null,
    "force_remove_source_branch": null,
    "prepared_at": "2025-10-14T02:17:00.782Z",
    "reference": "!3",
    "references": {
      "short": "!3",
      "relative": "!3",
      "full": "simulationsprojects_bachelorarbeit_ivan_esau/ba_project_a07_battleship!3"
    },
    "web_url": "https://gitlab.nibbler.fh-swf.de/simulationsprojects_bachelorarbeit_ivan_esau/ba_project_a07_battleship/-/merge_requests/3",
    "time_stats": {
      "time_estimate": 0,
      "total_time_spent": 0,
      "human_time_estimate": null,
      "human_total_time_spent": null
    },
    "squash": false,
    "squash_on_merge": false,
    "task_completion_status": {
      "count": 0,
      "completed_count": 0
    },
    "has_conflicts": false,
    "blocking_discussions_resolved": true
  },
  {
    "id": 680,
    "iid": 4,
    "project_id": 192,
    "title": "[US-04] Single-player mode vs. computer opponent",
    "description": "## Description\nImplements single-player mode with computer opponent for the Battleship game.\n\n## Requirements Implemented\n\n### 1) Single-Player Mode with Legal Fleet Placement\n- Computer places a legal fleet with standard ship sizes (Carrier: 5, Battleship: 4, Destroyer: 3, Submarine: 3, Patrol Boat: 2)\n- No overlaps or out-of-bounds placements\n- Fleet remains hidden from human player\n\n### 2) Computer Turn Logic\n- Computer selects valid untargeted coordinates\n- Avoids repeat shots\n- Implements difficulty-based targeting strategies\n\n### 3) Difficulty Options\n- **Easy**: Random valid shots\n- **Standard**: Hunt-and-target algorithm after hits (preferentially targets adjacent cells)\n\n## Acceptance Criteria Verified\n\n✅ **Given Single-Player is chosen, when the match starts, then the computer's fleet exists and is legal but hidden.**\n- ComputerPlayer class implements automatic fleet placement\n- Fleet validation ensures legal placement\n- Hidden board implementation\n\n✅ **Given the computer took a turn, when the history is inspected, then its shot is at a previously untargeted coordinate.**\n- Shot history tracking\n- Coordinate validation prevents repeats\n\n✅ **Given Standard difficulty and a computer hit, when subsequent computer turns occur, then at least one subsequent shot targets an adjacent cell until the ship is sunk.**\n- Hunt-and-target algorithm implementation\n- Adjacent cell targeting logic\n- Ship sinking detection\n\n## Technical Implementation\n\n### Core Components\n- `ComputerPlayer.java` - AI player implementation with difficulty levels\n- `Difficulty.java` - Enum for difficulty levels (EASY, STANDARD)\n- `GameService.java` - Game logic integration\n- `Board.java` - Enhanced with computer fleet placement\n\n### Testing\n- `ComputerPlayerTest.java` - Unit tests for AI logic\n- `DifficultyTest.java` - Difficulty level validation\n- `GameServiceTest.java` - Integration tests\n- `AcceptanceCriteriaTest.java` - Acceptance criteria validation\n\n## Files Modified/Created\n- `src/main/java/org/example/model/ComputerPlayer.java`\n- `src/main/java/org/example/model/Difficulty.java`\n- `src/main/java/org/example/model/Game.java`\n- `src/main/java/org/example/service/GameService.java`\n- `src/test/java/org/example/model/ComputerPlayerTest.java`\n- `src/test/java/org/example/model/DifficultyTest.java`\n- `src/test/java/org/example/service/GameServiceTest.java`\n- `src/test/java/org/example/AcceptanceCriteriaTest.java`\n\n## Pipeline Status\n- Pipeline #6676: ✅ SUCCESS (compile + test jobs passed)\n- Latest pipeline #6687: ⏳ PENDING\n\nCloses #4",
    "state": "opened",
    "created_at": "2025-10-14T04:02:30.351Z",
    "updated_at": "2025-10-14T04:29:34.260Z",
    "merged_by": null,
    "merge_user": null,
    "merged_at": null,
    "closed_by": null,
    "closed_at": null,
    "target_branch": "master",
    "source_branch": "feature/issue-4-us-04-single-player-mode-vs-co",
    "user_notes_count": 0,
    "upvotes": 0,
    "downvotes": 0,
    "author": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "assignees": [],
    "assignee": null,
    "reviewers": [],
    "source_project_id": 192,
    "target_project_id": 192,
    "labels": [],
    "draft": false,
    "imported": false,
    "imported_from": "none",
    "work_in_progress": false,
    "milestone": null,
    "merge_when_pipeline_succeeds": false,
    "merge_status": "unchecked",
    "detailed_merge_status": "unchecked",
    "merge_after": null,
    "sha": "cbc8bd48618ffba7ca8e7f885159c58673169527",
    "merge_commit_sha": null,
    "squash_commit_sha": null,
    "discussion_locked": null,
    "should_remove_source_branch": null,
    "force_remove_source_branch": null,
    "prepared_at": "2025-10-14T04:02:32.431Z",
    "reference": "!4",
    "references": {
      "short": "!4",
      "relative": "!4",
      "full": "simulationsprojects_bachelorarbeit_ivan_esau/ba_project_a07_battleship!4"
    },
    "web_url": "https://gitlab.nibbler.fh-swf.de/simulationsprojects_bachelorarbeit_ivan_esau/ba_project_a07_battleship/-/merge_requests/4",
    "time_stats": {
      "time_estimate": 0,
      "total_time_spent": 0,
      "human_time_estimate": null,
      "human_total_time_spent": null
    },
    "squash": false,
    "squash_on_merge": false,
    "task_completion_status": {
      "count": 0,
      "completed_count": 0
    },
    "has_conflicts": false,
    "blocking_discussions_resolved": true
  },
  {
    "id": 681,
    "iid": 5,
    "project_id": 192,
    "title": "[US-05] Save, load, and resume a match",
    "description": "## Implementation Summary\n\nThis merge request implements the save, load, and resume functionality for the Battleship game as specified in issue #5.\n\n### Features Implemented\n\n1. **Complete Game State Persistence**: Save all game state including board configurations, ship placements, shot history, sunk statuses, current turn, difficulty mode, and timer values\n2. **File Validation**: Comprehensive validation for file integrity, version compatibility, and corruption detection\n3. **Idempotent Round-trip**: Save and load operations preserve exact game state without modification\n4. **User File Selection**: Allow users to choose file locations and names for save/load operations\n5. **Error Handling**: Graceful error handling for corrupted, missing, or incompatible files\n\n### Technical Implementation\n\n- **Serialization**: JSON-based serialization for human-readable save files\n- **State Management**: Complete game state capture and restoration\n- **File I/O**: Robust file operations with comprehensive error handling\n- **Validation**: Version checking and data integrity validation\n\n### Acceptance Criteria Met\n\n- ✅ Mid-game state preservation: Save and load maintains exact game state\n- ✅ Corrupted file handling: Error reporting without modifying current game\n- ✅ Finished game preservation: Loaded finished games remain in completed state\n\nCloses #5",
    "state": "opened",
    "created_at": "2025-10-14T04:56:37.285Z",
    "updated_at": "2025-10-14T05:46:41.500Z",
    "merged_by": null,
    "merge_user": null,
    "merged_at": null,
    "closed_by": null,
    "closed_at": null,
    "target_branch": "master",
    "source_branch": "feature/issue-5-us-05-save-load-and-resume-a-m",
    "user_notes_count": 0,
    "upvotes": 0,
    "downvotes": 0,
    "author": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "assignees": [],
    "assignee": null,
    "reviewers": [],
    "source_project_id": 192,
    "target_project_id": 192,
    "labels": [],
    "draft": false,
    "imported": false,
    "imported_from": "none",
    "work_in_progress": false,
    "milestone": null,
    "merge_when_pipeline_succeeds": false,
    "merge_status": "unchecked",
    "detailed_merge_status": "unchecked",
    "merge_after": null,
    "sha": "f84d73a773b09610baf6d627fcc405984ec12902",
    "merge_commit_sha": null,
    "squash_commit_sha": null,
    "discussion_locked": null,
    "should_remove_source_branch": null,
    "force_remove_source_branch": null,
    "prepared_at": "2025-10-14T04:56:39.645Z",
    "reference": "!5",
    "references": {
      "short": "!5",
      "relative": "!5",
      "full": "simulationsprojects_bachelorarbeit_ivan_esau/ba_project_a07_battleship!5"
    },
    "web_url": "https://gitlab.nibbler.fh-swf.de/simulationsprojects_bachelorarbeit_ivan_esau/ba_project_a07_battleship/-/merge_requests/5",
    "time_stats": {
      "time_estimate": 0,
      "total_time_spent": 0,
      "human_time_estimate": null,
      "human_total_time_spent": null
    },
    "squash": false,
    "squash_on_merge": false,
    "task_completion_status": {
      "count": 0,
      "completed_count": 0
    },
    "has_conflicts": false,
    "blocking_discussions_resolved": true
  }
]