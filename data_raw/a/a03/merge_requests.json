[
  {
    "id": 662,
    "iid": 1,
    "project_id": 188,
    "title": "[US-01] Place fleet on a concealed board",
    "description": "## Description\nImplements the fleet placement functionality for the Battleship game.\n\n### Requirements Implemented:\n1. ✅ Provide a 10×10 grid per player\n2. ✅ Provide a standard fleet with ship lengths: Carrier (5), Battleship (4), Destroyer (3), Submarine (3), Patrol Boat (2)\n3. ✅ Allow placement horizontally or vertically; reject diagonal, overlapping, or out-of-bounds placements\n4. ✅ Keep each player's ship locations hidden from the opponent\n\n### Acceptance Criteria Validated:\n- ✅ Given a ship partly outside the grid, when placement is attempted, then the system rejects it with an error and no placement occurs\n- ✅ Given two ships sharing any square, when the second is placed, then placement is rejected and existing ships remain unchanged\n- ✅ Given a valid layout, when all ships are placed, then the board is marked ready and remains hidden from the opponent\n\n### Technical Implementation:\n- Layered architecture following ORCH_PLAN.json\n- Python implementation with pytest testing\n- Command-line interface for user interaction\n- Comprehensive validation logic for ship placement\n\nPipeline #5987: ✅ SUCCESS\n\nCloses #1",
    "state": "merged",
    "created_at": "2025-10-12T14:19:10.688Z",
    "updated_at": "2025-10-12T14:19:17.220Z",
    "merged_by": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "merge_user": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "merged_at": "2025-10-12T14:19:16.958Z",
    "closed_by": null,
    "closed_at": null,
    "target_branch": "master",
    "source_branch": "feature/issue-1-us-01-place-fleet-on-a-conceal",
    "user_notes_count": 0,
    "upvotes": 0,
    "downvotes": 0,
    "author": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "assignees": [],
    "assignee": null,
    "reviewers": [],
    "source_project_id": 188,
    "target_project_id": 188,
    "labels": [],
    "draft": false,
    "imported": false,
    "imported_from": "none",
    "work_in_progress": false,
    "milestone": null,
    "merge_when_pipeline_succeeds": false,
    "merge_status": "can_be_merged",
    "detailed_merge_status": "not_open",
    "merge_after": null,
    "sha": "eeda97a61268ea8e483ed1c9060eead78477867a",
    "merge_commit_sha": "7132ddba296e524ef3be350f763d5a5194da78ec",
    "squash_commit_sha": null,
    "discussion_locked": null,
    "should_remove_source_branch": false,
    "force_remove_source_branch": null,
    "prepared_at": "2025-10-12T14:19:12.935Z",
    "reference": "!1",
    "references": {
      "short": "!1",
      "relative": "!1",
      "full": "simulationsprojects_bachelorarbeit_ivan_esau/ba_project_a03_battleship!1"
    },
    "web_url": "https://gitlab.nibbler.fh-swf.de/simulationsprojects_bachelorarbeit_ivan_esau/ba_project_a03_battleship/-/merge_requests/1",
    "time_stats": {
      "time_estimate": 0,
      "total_time_spent": 0,
      "human_time_estimate": null,
      "human_total_time_spent": null
    },
    "squash": false,
    "squash_on_merge": false,
    "task_completion_status": {
      "count": 0,
      "completed_count": 0
    },
    "has_conflicts": false,
    "blocking_discussions_resolved": true
  },
  {
    "id": 663,
    "iid": 2,
    "project_id": 188,
    "title": "Implement [US-02] Take turns firing with hit/miss feedback",
    "description": "## Description\nImplements turn-based firing system for Battleship game with hit/miss feedback and turn enforcement.\n\n## Changes\n- Added turn-based firing logic in `GameService.fireAtOpponent()`\n- Implemented shot tracking and validation in `Board.recordShot()`\n- Added coordinate parsing and user feedback in `GameController.fireShot()`\n- Created comprehensive test coverage for ship placement and validation\n\n## Requirements Implemented\n✅ **Enforce alternating turns** - Turn switching logic prevents consecutive turns by same player\n✅ **Let active player select target coordinate** - Coordinate parsing from string format (A1, B5, etc.)\n✅ **Report hit/miss immediately and record results** - Immediate feedback with shot result tracking\n✅ **Prevent firing at same coordinate twice** - Shot tracking matrix prevents duplicate shots\n\n## Acceptance Criteria Validated\n✅ **Given A1 not targeted → fire at A1 → result shown and marked used** - Shot tracking and result reporting\n✅ **Given A1 already targeted → attempt A1 again → action blocked** - ALREADY_SHOT result prevents duplicate shots\n✅ **Given turn completes → control passes → only next player can act** - Turn switching enforces alternating turns\n\n## Technical Details\n- Java implementation with layered architecture (model/service/controller)\n- Comprehensive test coverage with JUnit\n- Pipeline #6024: SUCCESS (compile_job ✅, test_job ✅)\n\nCloses #2",
    "state": "merged",
    "created_at": "2025-10-12T15:08:20.651Z",
    "updated_at": "2025-10-12T15:08:28.403Z",
    "merged_by": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "merge_user": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "merged_at": "2025-10-12T15:08:28.108Z",
    "closed_by": null,
    "closed_at": null,
    "target_branch": "master",
    "source_branch": "feature/issue-2-us-02-take-turns-firing-with-h",
    "user_notes_count": 0,
    "upvotes": 0,
    "downvotes": 0,
    "author": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "assignees": [],
    "assignee": null,
    "reviewers": [],
    "source_project_id": 188,
    "target_project_id": 188,
    "labels": [],
    "draft": false,
    "imported": false,
    "imported_from": "none",
    "work_in_progress": false,
    "milestone": null,
    "merge_when_pipeline_succeeds": false,
    "merge_status": "can_be_merged",
    "detailed_merge_status": "not_open",
    "merge_after": null,
    "sha": "52730e8f2cd8d154da45d7220d239129fc9df130",
    "merge_commit_sha": "36a6883b77a88336d18fc02f994cbe7d7e0dbfb9",
    "squash_commit_sha": null,
    "discussion_locked": null,
    "should_remove_source_branch": false,
    "force_remove_source_branch": null,
    "prepared_at": "2025-10-12T15:08:22.583Z",
    "reference": "!2",
    "references": {
      "short": "!2",
      "relative": "!2",
      "full": "simulationsprojects_bachelorarbeit_ivan_esau/ba_project_a03_battleship!2"
    },
    "web_url": "https://gitlab.nibbler.fh-swf.de/simulationsprojects_bachelorarbeit_ivan_esau/ba_project_a03_battleship/-/merge_requests/2",
    "time_stats": {
      "time_estimate": 0,
      "total_time_spent": 0,
      "human_time_estimate": null,
      "human_total_time_spent": null
    },
    "squash": false,
    "squash_on_merge": false,
    "task_completion_status": {
      "count": 0,
      "completed_count": 0
    },
    "has_conflicts": false,
    "blocking_discussions_resolved": true
  },
  {
    "id": 664,
    "iid": 3,
    "project_id": 188,
    "title": "[US-03] Track ship damage, announce sunk, and end the game",
    "description": "## Implementation Summary\n\nThis merge request implements Issue #3: Track ship damage, announce sunk, and end the game.\n\n### Requirements Implemented\n\n1. **Track hits per ship and determine when all squares are hit**\n   - Ship class tracks individual hits per position\n   - `isSunk()` method checks if all positions are hit\n   - `getHitCount()` and `getRemainingHealth()` methods for damage tracking\n\n2. **Upon completion, announce the ship as 'sunk'**\n   - `ShotResult.SUNK` enum value for sunk ships\n   - `recordShotWithDetails()` method returns ship that was sunk\n   - GameController provides detailed announcements with ship type\n\n3. **When all ships of a player are sunk, declare victory and disable input**\n   - `areAllShipsSunk()` method in Board class\n   - GameService tracks game state and determines winner\n   - GameController provides game status with winner indication\n\n4. **Provide New Game to start a fresh match**\n   - `reset()` method in Board class clears all ships and shots\n   - GameService.resetGame() method for complete game reset\n\n### Acceptance Criteria Validated\n\n- ✅ **AC1**: Last square hit → ship announced sunk\n- ✅ **AC2**: Final enemy ship sunk → match ends, winner indicated, no further shots\n- ✅ **AC3**: Finished match → New Game resets both boards to covered, unplaced state\n\n### Technical Implementation\n\n- **Ship Damage Tracking**: Individual hit tracking per ship position\n- **Game State Management**: Proper state transitions with game over detection\n- **Announcement System**: Detailed sunk ship announcements with ship type\n- **Reset Functionality**: Complete game state reset for new matches\n\n### Testing\n\n- Unit tests for Ship damage tracking and sunk detection\n- Integration tests for game flow and state transitions\n- Acceptance criteria tests for all requirements\n\nCloses #3",
    "state": "merged",
    "created_at": "2025-10-12T16:59:19.398Z",
    "updated_at": "2025-10-12T16:59:29.747Z",
    "merged_by": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "merge_user": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "merged_at": "2025-10-12T16:59:29.464Z",
    "closed_by": null,
    "closed_at": null,
    "target_branch": "master",
    "source_branch": "feature/issue-3-us-03-track-ship-damage-announ",
    "user_notes_count": 0,
    "upvotes": 0,
    "downvotes": 0,
    "author": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "assignees": [],
    "assignee": null,
    "reviewers": [],
    "source_project_id": 188,
    "target_project_id": 188,
    "labels": [],
    "draft": false,
    "imported": false,
    "imported_from": "none",
    "work_in_progress": false,
    "milestone": null,
    "merge_when_pipeline_succeeds": false,
    "merge_status": "can_be_merged",
    "detailed_merge_status": "not_open",
    "merge_after": null,
    "sha": "a4dd0bedabe78a79626c9f7aaee16656f1a0a7e9",
    "merge_commit_sha": "5e842313a2ff088b744decc98962633c53de1934",
    "squash_commit_sha": null,
    "discussion_locked": null,
    "should_remove_source_branch": false,
    "force_remove_source_branch": null,
    "prepared_at": "2025-10-12T16:59:21.507Z",
    "reference": "!3",
    "references": {
      "short": "!3",
      "relative": "!3",
      "full": "simulationsprojects_bachelorarbeit_ivan_esau/ba_project_a03_battleship!3"
    },
    "web_url": "https://gitlab.nibbler.fh-swf.de/simulationsprojects_bachelorarbeit_ivan_esau/ba_project_a03_battleship/-/merge_requests/3",
    "time_stats": {
      "time_estimate": 0,
      "total_time_spent": 0,
      "human_time_estimate": null,
      "human_total_time_spent": null
    },
    "squash": false,
    "squash_on_merge": false,
    "task_completion_status": {
      "count": 0,
      "completed_count": 0
    },
    "has_conflicts": false,
    "blocking_discussions_resolved": true
  },
  {
    "id": 665,
    "iid": 4,
    "project_id": 188,
    "title": "[US-04] Single-player mode vs. computer opponent",
    "description": "## Implementation Summary\n\nThis merge request implements single-player mode against a computer opponent with two difficulty levels:\n\n### Features Implemented:\n- **Single-Player Mode**: Play against computer AI\n- **Difficulty Levels**: Easy (random shots) and Standard (hunt-and-target strategy)\n- **Legal Fleet Placement**: Computer automatically places ships without overlaps or out-of-bounds\n- **Smart Targeting**: Computer avoids repeating shots and uses hunt-and-target algorithm\n\n### Requirements Met:\n1. ✅ **Single-Player Mode**: Computer places legal fleet (no overlaps/out-of-bounds, standard sizes)\n2. ✅ **Valid Targeting**: Computer selects valid untargeted coordinates and avoids repeats\n3. ✅ **Difficulty Options**: Easy (random shots) and Standard (hunt-and-target after hits)\n\n### Acceptance Criteria Verified:\n- ✅ **Given Single-Player is chosen, when the match starts, then the computer's fleet exists and is legal but hidden**\n- ✅ **Given the computer took a turn, when the history is inspected, then its shot is at a previously untargeted coordinate**\n- ✅ **Given Standard difficulty and a computer hit, when subsequent computer turns occur, then at least one subsequent shot targets an adjacent cell until the ship is sunk**\n\n### Technical Implementation:\n- **ComputerPlayer Class**: AI logic with difficulty-based targeting\n- **Hunt-and-Target Algorithm**: After hits, preferentially targets adjacent cells\n- **Legal Placement**: Systematic ship placement with fallback algorithms\n- **Comprehensive Testing**: Unit tests verify all acceptance criteria\n\n### Pipeline Status:\n- Pipeline #6062: ✅ **SUCCESS**\n- All tests passing: ✅ **100%**\n- Code compilation: ✅ **SUCCESS**\n\nCloses #4",
    "state": "merged",
    "created_at": "2025-10-12T17:24:49.331Z",
    "updated_at": "2025-10-12T17:24:55.236Z",
    "merged_by": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "merge_user": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "merged_at": "2025-10-12T17:24:54.942Z",
    "closed_by": null,
    "closed_at": null,
    "target_branch": "master",
    "source_branch": "feature/issue-4-us-04-single-player-mode-vs-co",
    "user_notes_count": 0,
    "upvotes": 0,
    "downvotes": 0,
    "author": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "assignees": [],
    "assignee": null,
    "reviewers": [],
    "source_project_id": 188,
    "target_project_id": 188,
    "labels": [],
    "draft": false,
    "imported": false,
    "imported_from": "none",
    "work_in_progress": false,
    "milestone": null,
    "merge_when_pipeline_succeeds": false,
    "merge_status": "can_be_merged",
    "detailed_merge_status": "not_open",
    "merge_after": null,
    "sha": "dc1e11eeea85438e7c64d42211b42601a5f47065",
    "merge_commit_sha": "c58def8049111c65c1482ade4ed32e6550474b32",
    "squash_commit_sha": null,
    "discussion_locked": null,
    "should_remove_source_branch": false,
    "force_remove_source_branch": null,
    "prepared_at": "2025-10-12T17:24:51.497Z",
    "reference": "!4",
    "references": {
      "short": "!4",
      "relative": "!4",
      "full": "simulationsprojects_bachelorarbeit_ivan_esau/ba_project_a03_battleship!4"
    },
    "web_url": "https://gitlab.nibbler.fh-swf.de/simulationsprojects_bachelorarbeit_ivan_esau/ba_project_a03_battleship/-/merge_requests/4",
    "time_stats": {
      "time_estimate": 0,
      "total_time_spent": 0,
      "human_time_estimate": null,
      "human_total_time_spent": null
    },
    "squash": false,
    "squash_on_merge": false,
    "task_completion_status": {
      "count": 0,
      "completed_count": 0
    },
    "has_conflicts": false,
    "blocking_discussions_resolved": true
  }
]