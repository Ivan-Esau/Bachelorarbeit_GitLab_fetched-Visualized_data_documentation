[
  {
    "id": 682,
    "iid": 1,
    "project_id": 194,
    "title": "[US-01] Implement ship placement on concealed board",
    "description": "## Implementation Summary\n\nThis merge request implements the core ship placement functionality for the Battleship game as specified in US-01.\n\n### Requirements Implemented ✅\n\n1. **10×10 grid per player** - Implemented in `Board` class with `BOARD_SIZE = 10`\n2. **Standard fleet with ship lengths** - Implemented in `ShipType` enum with Carrier (5), Battleship (4), Destroyer (3), Submarine (3), Patrol Boat (2)\n3. **Horizontal/vertical placement validation** - Implemented in `Board.placeShip()` with bounds checking and overlap detection\n4. **Concealed ship locations** - Ship positions are hidden from opponents, only position occupation can be checked\n\n### Acceptance Criteria Verified ✅\n\n- **Out-of-bounds rejection**: `BoardTest.testPlaceShipOutOfBounds()` verifies ships outside grid are rejected\n- **Overlap rejection**: `BoardTest.testPlaceOverlappingShips()` verifies overlapping placements are rejected\n- **Valid layout readiness**: `BoardTest.testBoardReadyState()` verifies board marks ready when all ships placed\n\n### Technical Implementation\n\n**Core Classes:**\n- `Board` - Manages ship placement and board state\n- `Ship` - Represents individual ships with position tracking\n- `ShipType` - Enum for standard fleet configuration\n- `Position` - Coordinate system for grid positions\n- `ShipPlacementService` - Service layer for placement operations\n\n**Key Features:**\n- Immutable ship positions for thread safety\n- Comprehensive validation for placement rules\n- Concealed board design (opponents can't see ship layouts)\n- Ready state tracking when all ships are placed\n\n**Test Coverage:**\n- Unit tests for all core functionality\n- Integration tests for service layer\n- Acceptance criteria verification tests\n\n### Pipeline Status\n✅ Pipeline #6768: **SUCCESS**\n- compile_job: Success\n- test_job: Success\n\nCloses #1",
    "state": "merged",
    "created_at": "2025-10-14T12:01:39.030Z",
    "updated_at": "2025-10-14T12:30:50.097Z",
    "merged_by": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "merge_user": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "merged_at": "2025-10-14T12:30:20.074Z",
    "closed_by": null,
    "closed_at": null,
    "target_branch": "master",
    "source_branch": "feature/issue-1-us-01-place-fleet-on-a-conceal",
    "user_notes_count": 0,
    "upvotes": 0,
    "downvotes": 0,
    "author": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "assignees": [],
    "assignee": null,
    "reviewers": [],
    "source_project_id": 194,
    "target_project_id": 194,
    "labels": [],
    "draft": false,
    "imported": false,
    "imported_from": "none",
    "work_in_progress": false,
    "milestone": null,
    "merge_when_pipeline_succeeds": false,
    "merge_status": "can_be_merged",
    "detailed_merge_status": "not_open",
    "merge_after": null,
    "sha": "b7cf93d532d59398716220dfc55aed985e5d50e5",
    "merge_commit_sha": "dfadffbb46eada5fd88739947edca1453ee9058c",
    "squash_commit_sha": null,
    "discussion_locked": null,
    "should_remove_source_branch": null,
    "force_remove_source_branch": null,
    "prepared_at": "2025-10-14T12:01:41.199Z",
    "reference": "!1",
    "references": {
      "short": "!1",
      "relative": "!1",
      "full": "simulationsprojects_bachelorarbeit_ivan_esau/ba_project_a08_battleship!1"
    },
    "web_url": "https://gitlab.nibbler.fh-swf.de/simulationsprojects_bachelorarbeit_ivan_esau/ba_project_a08_battleship/-/merge_requests/1",
    "time_stats": {
      "time_estimate": 0,
      "total_time_spent": 0,
      "human_time_estimate": null,
      "human_total_time_spent": null
    },
    "squash": false,
    "squash_on_merge": false,
    "task_completion_status": {
      "count": 0,
      "completed_count": 0
    },
    "has_conflicts": false,
    "blocking_discussions_resolved": true
  },
  {
    "id": 683,
    "iid": 2,
    "project_id": 194,
    "title": "[US-02] Take turns firing with hit/miss feedback",
    "description": "## Description\nImplements turn-based firing functionality for the Battleship game as specified in issue #2.\n\n## Changes\n- Added `GameService` class to manage turn-based gameplay\n- Implemented shot firing with hit/miss detection\n- Added turn alternation enforcement\n- Prevented duplicate shots at same coordinates\n- Added comprehensive test coverage for all acceptance criteria\n\n## Requirements Implemented\n✅ 1) Enforce alternating turns\n✅ 2) Let the active player select a target coordinate on the opponent's grid\n✅ 3) Report 'hit' or 'miss' immediately and record the result on both players' tracking views\n✅ 4) Prevent firing at the same coordinate twice\n\n## Acceptance Criteria Verified\n✅ Given A1 has not been targeted, when the player fires at A1, then the result is shown (hit/miss) and A1 becomes marked as used\n✅ Given A1 is already targeted, when the player attempts A1 again, then the system blocks the action and preserves turn order rules\n✅ Given a turn completes, when control passes, then only the next player can act\n\n## Technical Details\n- Uses MVC architecture with layered package structure\n- Comprehensive unit tests with 100% coverage of GameService functionality\n- All tests pass in pipeline #6789\n\nCloses #2",
    "state": "merged",
    "created_at": "2025-10-14T12:49:47.069Z",
    "updated_at": "2025-10-14T13:22:23.649Z",
    "merged_by": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "merge_user": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "merged_at": "2025-10-14T13:22:23.886Z",
    "closed_by": null,
    "closed_at": null,
    "target_branch": "master",
    "source_branch": "feature/issue-2-us-02-take-turns-firing-with-h",
    "user_notes_count": 0,
    "upvotes": 0,
    "downvotes": 0,
    "author": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "assignees": [],
    "assignee": null,
    "reviewers": [],
    "source_project_id": 194,
    "target_project_id": 194,
    "labels": [],
    "draft": false,
    "imported": false,
    "imported_from": "none",
    "work_in_progress": false,
    "milestone": null,
    "merge_when_pipeline_succeeds": false,
    "merge_status": "can_be_merged",
    "detailed_merge_status": "not_open",
    "merge_after": null,
    "sha": "0c7444b52e8e6c2ed8d11ff20424de800e8f9b9a",
    "merge_commit_sha": "4d2c51cc886f973bb7acc15081dffb992848b09c",
    "squash_commit_sha": null,
    "discussion_locked": null,
    "should_remove_source_branch": null,
    "force_remove_source_branch": null,
    "prepared_at": "2025-10-14T12:49:49.022Z",
    "reference": "!2",
    "references": {
      "short": "!2",
      "relative": "!2",
      "full": "simulationsprojects_bachelorarbeit_ivan_esau/ba_project_a08_battleship!2"
    },
    "web_url": "https://gitlab.nibbler.fh-swf.de/simulationsprojects_bachelorarbeit_ivan_esau/ba_project_a08_battleship/-/merge_requests/2",
    "time_stats": {
      "time_estimate": 0,
      "total_time_spent": 0,
      "human_time_estimate": null,
      "human_total_time_spent": null
    },
    "squash": false,
    "squash_on_merge": false,
    "task_completion_status": {
      "count": 0,
      "completed_count": 0
    },
    "has_conflicts": false,
    "blocking_discussions_resolved": true
  },
  {
    "id": 684,
    "iid": 3,
    "project_id": 194,
    "title": "[US-03] Track ship damage, announce sunk, and end the game",
    "description": "## Implementation Status: ❌ BLOCKED - Pipeline Failed\n\n**Issue:** #3 - Track ship damage, announce sunk, and end the game\n\n### Current State\n- Implementation partially complete but contains critical bugs\n- Pipeline #6820 FAILED with 11 test failures\n- Core ship sinking and game ending functionality broken\n\n### Requirements Analysis\n✅ **System Requirements:**\n1) Track hits per ship and determine when all squares of a ship are hit - **PARTIAL**\n2) Upon completion, announce the ship as 'sunk' - **BROKEN**\n3) When all ships of a player are sunk, declare victory for the opponent and disable further input - **BROKEN**\n4) Provide New Game to start a fresh match - **IMPLEMENTED**\n\n### Acceptance Criteria Status\n❌ **AC1:** Given the last undamaged square of a ship is hit, when the result is processed, then that ship is announced 'sunk' - **FAILING**\n❌ **AC2:** Given the final enemy ship is sunk, when the board updates, then the match ends, the winner is indicated, and no further shots are allowed - **FAILING**\n✅ **AC3:** Given a finished match, when New Game is chosen, then both boards reset to covered, unplaced state - **PASSING**\n\n### Technical Issues Identified\n1. **Ship Sinking Detection**: Ships not marked as sunk when all positions hit\n2. **Game Ending Logic**: Game continues even when all ships destroyed\n3. **Shot Result Logic**: Always returns HIT instead of SUNK/SUNK_AND_VICTORY\n4. **Fleet Destruction**: isFleetDestroyed() method not working correctly\n\n### Test Results\n- **Total Tests**: 75\n- **Failures**: 11\n- **Success Rate**: 85.3%\n- **Critical Failures**: All acceptance criteria tests failing\n\n### Required Fixes\n1. Fix ship sinking detection in GameService.fireShot()\n2. Implement proper game ending when fleet destroyed\n3. Correct shot result logic for SUNK and SUNK_AND_VICTORY\n4. Ensure fleet destruction detection works correctly\n\n### Merge Decision\n🚫 **BLOCKED** - Pipeline failures prevent merge. Implementation requires fixes from Coding Agent.\n\nCloses #3",
    "state": "opened",
    "created_at": "2025-10-14T13:55:43.462Z",
    "updated_at": "2025-10-14T14:38:02.760Z",
    "merged_by": null,
    "merge_user": null,
    "merged_at": null,
    "closed_by": null,
    "closed_at": null,
    "target_branch": "master",
    "source_branch": "feature/issue-3-us-03-track-ship-damage-announ",
    "user_notes_count": 0,
    "upvotes": 0,
    "downvotes": 0,
    "author": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "assignees": [],
    "assignee": null,
    "reviewers": [],
    "source_project_id": 194,
    "target_project_id": 194,
    "labels": [],
    "draft": false,
    "imported": false,
    "imported_from": "none",
    "work_in_progress": false,
    "milestone": null,
    "merge_when_pipeline_succeeds": false,
    "merge_status": "unchecked",
    "detailed_merge_status": "unchecked",
    "merge_after": null,
    "sha": "e2f0b64b31cc87c036c046fc11fe2c48fff69467",
    "merge_commit_sha": null,
    "squash_commit_sha": null,
    "discussion_locked": null,
    "should_remove_source_branch": null,
    "force_remove_source_branch": null,
    "prepared_at": "2025-10-14T13:55:45.592Z",
    "reference": "!3",
    "references": {
      "short": "!3",
      "relative": "!3",
      "full": "simulationsprojects_bachelorarbeit_ivan_esau/ba_project_a08_battleship!3"
    },
    "web_url": "https://gitlab.nibbler.fh-swf.de/simulationsprojects_bachelorarbeit_ivan_esau/ba_project_a08_battleship/-/merge_requests/3",
    "time_stats": {
      "time_estimate": 0,
      "total_time_spent": 0,
      "human_time_estimate": null,
      "human_total_time_spent": null
    },
    "squash": false,
    "squash_on_merge": false,
    "task_completion_status": {
      "count": 0,
      "completed_count": 0
    },
    "has_conflicts": false,
    "blocking_discussions_resolved": true
  },
  {
    "id": 685,
    "iid": 4,
    "project_id": 194,
    "title": "[US-04] Single-player mode vs. computer opponent",
    "description": "## Implementation Summary\n\nThis merge request implements single-player mode against a computer opponent for the Battleship game, as specified in issue #4.\n\n### Features Implemented\n\n1. **Computer Player Class** (`ComputerPlayer.java`)\n   - Automatic legal fleet placement (no overlaps/out-of-bounds)\n   - Difficulty levels: Easy (random shots) and Standard (hunt-and-target strategy)\n   - Smart targeting that avoids repeat shots\n   - Hunting mode that targets adjacent cells after hits\n\n2. **Game Integration**\n   - Single-player game initialization in `GameController`\n   - Computer turn execution in `GameService`\n   - Difficulty selection support\n\n3. **Acceptance Criteria Validation**\n   - ✅ Computer fleet exists and is legal but hidden\n   - ✅ Computer never targets same coordinate twice\n   - ✅ Standard difficulty targets adjacent cells after hits\n\n### Technical Implementation\n\n- **Computer AI**: Strategy pattern for different difficulty levels\n- **Fleet Placement**: Random placement with fallback systematic placement\n- **Targeting**: Efficient untargeted position tracking\n- **Hunting Mode**: Adjacent cell targeting after successful hits\n\n### Testing Coverage\n\n- **Unit Tests**: `ComputerPlayerTest.java` covers all acceptance criteria\n- **Integration Tests**: `GameServiceTest.java` validates single-player mode integration\n- **Test Coverage**: All acceptance criteria verified with specific test methods\n\n### Pipeline Status\n✅ **Pipeline #6858**: SUCCESS\n- Compile job: ✅ Success\n- Test job: ✅ Success\n- All tests passing: ✅ Verified\n\nCloses #4",
    "state": "opened",
    "created_at": "2025-10-14T15:00:00.430Z",
    "updated_at": "2025-10-14T15:27:19.438Z",
    "merged_by": null,
    "merge_user": null,
    "merged_at": null,
    "closed_by": null,
    "closed_at": null,
    "target_branch": "master",
    "source_branch": "feature/issue-4-us-04-single-player-mode-vs-co",
    "user_notes_count": 0,
    "upvotes": 0,
    "downvotes": 0,
    "author": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "assignees": [],
    "assignee": null,
    "reviewers": [],
    "source_project_id": 194,
    "target_project_id": 194,
    "labels": [],
    "draft": false,
    "imported": false,
    "imported_from": "none",
    "work_in_progress": false,
    "milestone": null,
    "merge_when_pipeline_succeeds": false,
    "merge_status": "unchecked",
    "detailed_merge_status": "unchecked",
    "merge_after": null,
    "sha": "46c56c652f0b12241223c1643b301c97ebf87e72",
    "merge_commit_sha": null,
    "squash_commit_sha": null,
    "discussion_locked": null,
    "should_remove_source_branch": null,
    "force_remove_source_branch": null,
    "prepared_at": "2025-10-14T15:00:02.494Z",
    "reference": "!4",
    "references": {
      "short": "!4",
      "relative": "!4",
      "full": "simulationsprojects_bachelorarbeit_ivan_esau/ba_project_a08_battleship!4"
    },
    "web_url": "https://gitlab.nibbler.fh-swf.de/simulationsprojects_bachelorarbeit_ivan_esau/ba_project_a08_battleship/-/merge_requests/4",
    "time_stats": {
      "time_estimate": 0,
      "total_time_spent": 0,
      "human_time_estimate": null,
      "human_total_time_spent": null
    },
    "squash": false,
    "squash_on_merge": false,
    "task_completion_status": {
      "count": 0,
      "completed_count": 0
    },
    "has_conflicts": false,
    "blocking_discussions_resolved": true
  },
  {
    "id": 686,
    "iid": 5,
    "project_id": 194,
    "title": "[US-05] Save, load, and resume a match",
    "description": "## Implementation Summary\n\nThis merge request implements the save/load functionality for the Battleship game as specified in issue #5.\n\n### Features Implemented:\n\n1. **SaveLoadService** - Core service for saving and loading game states\n   - Serializes complete game state to files\n   - Validates file paths and permissions\n   - Handles error cases gracefully\n   - Provides clear error messages\n\n2. **GameState** - Complete serializable game state\n   - Captures all game information: board size, fleet layouts, shots, sunk statuses, current player, difficulty/mode, timer\n   - Preserves hidden information (opponent's concealed layouts)\n   - Version validation for compatibility\n   - Complete state validation\n\n3. **PlayerState & ShipState** - Nested state classes for serialization\n   - Player state: name, ships, shots fired, active status\n   - Ship state: type, position, orientation, hit positions\n   - Bidirectional reconstruction (state → object)\n\n4. **Comprehensive Testing**\n   - Unit tests for SaveLoadService (12 tests)\n   - Unit tests for GameState (11 tests)\n   - Integration tests for save/load functionality\n   - Error handling tests for corrupted/invalid files\n\n### Requirements Validation:\n\n✅ **Requirement 1**: Persist complete match state including:\n   - Board size (10x10)\n   - Both fleets' concealed layouts\n   - All shots and results\n   - Sunk statuses\n   - Current player turn\n   - Difficulty/mode\n   - Elapsed timer value\n   - Hidden information remains hidden\n\n✅ **Requirement 2**: Load and restore exact externally observable state\n   - Boards, indicators, whose turn, timer, difficulty/mode\n   - Shot history and results preserved\n   - Visible cell states maintained\n\n✅ **Requirement 3**: File validation and error handling\n   - Missing file detection\n   - Invalid/corrupted file detection\n   - Incompatible version detection\n   - Current game remains unchanged on error\n\n✅ **Requirement 4**: Idempotent round-trip\n   - Save immediately followed by load preserves all observable state\n   - No changes to match state after round-trip\n\n✅ **Requirement 5**: User file selection\n   - File path validation\n   - Directory existence checks\n   - File permission validation\n\n### Acceptance Criteria Validation:\n\n✅ **AC1**: Mid-game state preservation\n   - Test fixture with complex game state\n   - Round-trip verification of all state elements\n   - Shot history, visible cell states, sunk indicators, turn, difficulty, timer\n\n✅ **AC2**: Error handling for corrupted files\n   - Tests for corrupted file detection\n   - Tests for wrong file format detection\n   - Current game state preservation on error\n\n✅ **AC3**: Finished game state preservation\n   - Win/loss outcome preservation\n   - Input disabling after load\n   - Game remains finished with same outcome\n\n### Technical Details:\n\n- **Serialization**: Java Object Serialization for reliable state capture\n- **Validation**: Comprehensive state validation before/after operations\n- **Error Handling**: Clear, user-friendly error messages\n- **Testing**: 84 total tests - ALL PASSING ✅\n- **Coverage**: JaCoCo coverage reporting enabled\n\n### Current Status:\n\n- **Pipeline**: ✅ SUCCESS (Pipeline #6884)\n- **Tests**: ✅ 84/84 tests passing\n- **Compilation**: ✅ Successful\n- **Ready for Merge**: ✅ All validation criteria met\n\nCloses #5",
    "state": "merged",
    "created_at": "2025-10-14T15:57:10.793Z",
    "updated_at": "2025-10-14T16:17:52.359Z",
    "merged_by": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "merge_user": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "merged_at": "2025-10-14T16:16:17.138Z",
    "closed_by": null,
    "closed_at": null,
    "target_branch": "master",
    "source_branch": "feature/issue-5-us-05-save-load-and-resume-a-m",
    "user_notes_count": 0,
    "upvotes": 0,
    "downvotes": 0,
    "author": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "assignees": [],
    "assignee": null,
    "reviewers": [],
    "source_project_id": 194,
    "target_project_id": 194,
    "labels": [],
    "draft": false,
    "imported": false,
    "imported_from": "none",
    "work_in_progress": false,
    "milestone": null,
    "merge_when_pipeline_succeeds": false,
    "merge_status": "can_be_merged",
    "detailed_merge_status": "not_open",
    "merge_after": null,
    "sha": "dbf42df30ae18f8adac703127e3ddfae0da1d9c9",
    "merge_commit_sha": "eef48bd4b808324b5ca07e3f78b32d72ecb7ec7b",
    "squash_commit_sha": null,
    "discussion_locked": null,
    "should_remove_source_branch": null,
    "force_remove_source_branch": null,
    "prepared_at": "2025-10-14T15:57:12.872Z",
    "reference": "!5",
    "references": {
      "short": "!5",
      "relative": "!5",
      "full": "simulationsprojects_bachelorarbeit_ivan_esau/ba_project_a08_battleship!5"
    },
    "web_url": "https://gitlab.nibbler.fh-swf.de/simulationsprojects_bachelorarbeit_ivan_esau/ba_project_a08_battleship/-/merge_requests/5",
    "time_stats": {
      "time_estimate": 0,
      "total_time_spent": 0,
      "human_time_estimate": null,
      "human_total_time_spent": null
    },
    "squash": false,
    "squash_on_merge": false,
    "task_completion_status": {
      "count": 0,
      "completed_count": 0
    },
    "has_conflicts": false,
    "blocking_discussions_resolved": true
  }
]