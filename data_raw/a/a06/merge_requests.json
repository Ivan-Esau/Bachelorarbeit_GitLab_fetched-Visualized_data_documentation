[
  {
    "id": 721,
    "iid": 1,
    "project_id": 203,
    "title": "[US-01] Place fleet on a concealed board",
    "description": "## Implementation Summary\n\nThis merge request implements the core ship placement functionality for the Battleship game as specified in US-01.\n\n### Requirements Implemented\n\n✅ **10×10 grid per player** - Implemented in `Board` class with `GRID_SIZE = 10`\n✅ **Standard fleet with ship lengths** - Carrier (5), Battleship (4), Destroyer (3), Submarine (3), Patrol Boat (2) implemented in `Ship.Type` enum\n✅ **Placement validation** - Horizontal/vertical placement with bounds checking and overlap prevention in `Board.placeShip()`\n✅ **Concealment** - Ship locations are encapsulated and hidden from opponents\n\n### Core Components\n\n- **`Board`** - Manages 10x10 grid, ship placement validation, and fleet completeness\n- **`Ship`** - Represents individual ships with type, position, and orientation\n- **`Coordinate`** - Validates grid bounds and provides coordinate operations\n- **`Player`** - Base class for managing individual player state\n\n### Acceptance Criteria Validation\n\n✅ **Out-of-bounds rejection** - `Coordinate.isValid()` and `Board.placeShip()` prevent out-of-bounds placements\n✅ **Overlap prevention** - `Ship.overlapsWith()` and `Board.placeShip()` prevent overlapping ships\n✅ **Board readiness** - `Board.markReady()` only succeeds when standard fleet is complete\n\n### Test Coverage\n\n- **`CoordinateTest`** - Comprehensive bounds validation and coordinate operations\n- **`BoardTest`** - 12 test methods covering placement, validation, fleet management\n- **`ShipTest`** - 12 test methods covering creation, positioning, overlap detection\n\n### Pipeline Status\n\n- **Pipeline #8113**: SUCCESS (compile_job ✓, test_job ✓)\n- **Current Status**: Implementation validated and ready for merge\n- **Technical Issue**: System-level merge blocking (not implementation-related)\n\nCloses #1",
    "state": "opened",
    "created_at": "2025-10-16T22:04:47.596Z",
    "updated_at": "2025-10-16T22:40:00.239Z",
    "merged_by": null,
    "merge_user": null,
    "merged_at": null,
    "closed_by": null,
    "closed_at": null,
    "target_branch": "master",
    "source_branch": "feature/issue-1-us-01-place-fleet-on-a-conceal",
    "user_notes_count": 0,
    "upvotes": 0,
    "downvotes": 0,
    "author": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "assignees": [],
    "assignee": null,
    "reviewers": [],
    "source_project_id": 203,
    "target_project_id": 203,
    "labels": [],
    "draft": false,
    "imported": false,
    "imported_from": "none",
    "work_in_progress": false,
    "milestone": null,
    "merge_when_pipeline_succeeds": false,
    "merge_status": "unchecked",
    "detailed_merge_status": "unchecked",
    "merge_after": null,
    "sha": "c070e77c871665e2b4a107cc05305944c37739fd",
    "merge_commit_sha": null,
    "squash_commit_sha": null,
    "discussion_locked": null,
    "should_remove_source_branch": null,
    "force_remove_source_branch": null,
    "prepared_at": "2025-10-16T22:04:49.432Z",
    "reference": "!1",
    "references": {
      "short": "!1",
      "relative": "!1",
      "full": "simulationsprojects_bachelorarbeit_ivan_esau/ba_project_a06_battleship!1"
    },
    "web_url": "https://gitlab.nibbler.fh-swf.de/simulationsprojects_bachelorarbeit_ivan_esau/ba_project_a06_battleship/-/merge_requests/1",
    "time_stats": {
      "time_estimate": 0,
      "total_time_spent": 0,
      "human_time_estimate": null,
      "human_total_time_spent": null
    },
    "squash": false,
    "squash_on_merge": false,
    "task_completion_status": {
      "count": 0,
      "completed_count": 0
    },
    "has_conflicts": false,
    "blocking_discussions_resolved": true
  },
  {
    "id": 722,
    "iid": 2,
    "project_id": 203,
    "title": "[US-02] Take turns firing with hit/miss feedback",
    "description": "## Description\nImplements turn-based firing system for Battleship game with hit/miss feedback.\n\n## Requirements Implemented\n1) **Enforce alternating turns** - GameService manages turn switching\n2) **Let active player select target coordinate** - Coordinate input system\n3) **Report 'hit' or 'miss' immediately** - Shot result feedback\n4) **Prevent firing at same coordinate twice** - Board tracking system\n\n## Acceptance Criteria Verified\n- ✅ Given A1 has not been targeted, when player fires at A1, result shown and A1 marked as used\n- ✅ Given A1 is already targeted, when player attempts A1 again, system blocks action\n- ✅ Given a turn completes, when control passes, only next player can act\n\n## Files Created/Modified\n- `src/main/java/org/example/model/Board.java` - Board logic with shot tracking\n- `src/main/java/org/example/model/Coordinate.java` - Coordinate validation\n- `src/main/java/org/example/model/Game.java` - Game state management\n- `src/main/java/org/example/model/Player.java` - Player turn management\n- `src/main/java/org/example/service/GameService.java` - Turn-based game logic\n- `src/test/java/org/example/model/BoardTest.java` - Board shot validation tests\n- `src/test/java/org/example/model/GameTest.java` - Turn management tests\n\n## Technical Implementation\n- Turn-based state machine in GameService\n- Coordinate validation and shot tracking in Board\n- Player turn switching with validation\n- Comprehensive test coverage for all acceptance criteria\n\nCloses #2",
    "state": "opened",
    "created_at": "2025-10-16T23:03:59.762Z",
    "updated_at": "2025-10-16T23:58:46.861Z",
    "merged_by": null,
    "merge_user": null,
    "merged_at": null,
    "closed_by": null,
    "closed_at": null,
    "target_branch": "master",
    "source_branch": "feature/issue-2-us-02-take-turns-firing-with-h",
    "user_notes_count": 0,
    "upvotes": 0,
    "downvotes": 0,
    "author": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "assignees": [],
    "assignee": null,
    "reviewers": [],
    "source_project_id": 203,
    "target_project_id": 203,
    "labels": [],
    "draft": false,
    "imported": false,
    "imported_from": "none",
    "work_in_progress": false,
    "milestone": null,
    "merge_when_pipeline_succeeds": false,
    "merge_status": "unchecked",
    "detailed_merge_status": "unchecked",
    "merge_after": null,
    "sha": "eef7cffed2eb8161a6c7b44a02eac1d40801cde0",
    "merge_commit_sha": null,
    "squash_commit_sha": null,
    "discussion_locked": null,
    "should_remove_source_branch": null,
    "force_remove_source_branch": null,
    "prepared_at": "2025-10-16T23:04:01.861Z",
    "reference": "!2",
    "references": {
      "short": "!2",
      "relative": "!2",
      "full": "simulationsprojects_bachelorarbeit_ivan_esau/ba_project_a06_battleship!2"
    },
    "web_url": "https://gitlab.nibbler.fh-swf.de/simulationsprojects_bachelorarbeit_ivan_esau/ba_project_a06_battleship/-/merge_requests/2",
    "time_stats": {
      "time_estimate": 0,
      "total_time_spent": 0,
      "human_time_estimate": null,
      "human_total_time_spent": null
    },
    "squash": false,
    "squash_on_merge": false,
    "task_completion_status": {
      "count": 0,
      "completed_count": 0
    },
    "has_conflicts": false,
    "blocking_discussions_resolved": true
  },
  {
    "id": 723,
    "iid": 3,
    "project_id": 203,
    "title": "[US-03] Track ship damage, announce sunk, and end the game",
    "description": "## Description\nImplements ship damage tracking, sunk announcements, and game ending functionality for Battleship game.\n\n## Changes\n- Added ship damage tracking with hit recording\n- Implemented ship sunk detection and announcements\n- Added game ending logic when all ships are sunk\n- Implemented new game functionality\n- Added comprehensive test coverage\n\n## Requirements Implemented\n✅ Track hits per ship and determine when all squares of a ship are hit\n✅ Upon completion, announce the ship as 'sunk'\n✅ When all ships of a player are sunk, declare victory for the opponent and disable further input\n✅ Provide New Game to start a fresh match\n\n## Acceptance Criteria Validated\n✅ Given the last undamaged square of a ship is hit, when the result is processed, then that ship is announced 'sunk'\n✅ Given the final enemy ship is sunk, when the board updates, then the match ends, the winner is indicated, and no further shots are allowed\n✅ Given a finished match, when New Game is chosen, then both boards reset to covered, unplaced state\n\n## Technical Details\n- Added `Ship.isSunk()` method to detect when all positions are hit\n- Enhanced `Game.processShot()` to handle sunk ships and game ending\n- Added `Player.hasLost()` to check if all ships are sunk\n- Implemented `Game.newGame()` for reset functionality\n- Comprehensive test coverage in `ShipTest.java` and `GameTest.java`\n\nCloses #3",
    "state": "opened",
    "created_at": "2025-10-17T00:33:06.594Z",
    "updated_at": "2025-10-17T01:24:11.349Z",
    "merged_by": null,
    "merge_user": null,
    "merged_at": null,
    "closed_by": null,
    "closed_at": null,
    "target_branch": "master",
    "source_branch": "feature/issue-3-us-03-track-ship-damage-announ",
    "user_notes_count": 0,
    "upvotes": 0,
    "downvotes": 0,
    "author": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "assignees": [],
    "assignee": null,
    "reviewers": [],
    "source_project_id": 203,
    "target_project_id": 203,
    "labels": [],
    "draft": false,
    "imported": false,
    "imported_from": "none",
    "work_in_progress": false,
    "milestone": null,
    "merge_when_pipeline_succeeds": false,
    "merge_status": "unchecked",
    "detailed_merge_status": "unchecked",
    "merge_after": null,
    "sha": "d9b91eeee0438bd2bfcae4fe69cf8da6d10331f3",
    "merge_commit_sha": null,
    "squash_commit_sha": null,
    "discussion_locked": null,
    "should_remove_source_branch": null,
    "force_remove_source_branch": null,
    "prepared_at": "2025-10-17T00:33:08.351Z",
    "reference": "!3",
    "references": {
      "short": "!3",
      "relative": "!3",
      "full": "simulationsprojects_bachelorarbeit_ivan_esau/ba_project_a06_battleship!3"
    },
    "web_url": "https://gitlab.nibbler.fh-swf.de/simulationsprojects_bachelorarbeit_ivan_esau/ba_project_a06_battleship/-/merge_requests/3",
    "time_stats": {
      "time_estimate": 0,
      "total_time_spent": 0,
      "human_time_estimate": null,
      "human_total_time_spent": null
    },
    "squash": false,
    "squash_on_merge": false,
    "task_completion_status": {
      "count": 0,
      "completed_count": 0
    },
    "has_conflicts": false,
    "blocking_discussions_resolved": true
  },
  {
    "id": 724,
    "iid": 4,
    "project_id": 203,
    "title": "[US-04] Single-player mode vs. computer opponent",
    "description": "## Implementation Summary\n\nThis merge request implements single-player mode against a computer opponent with the following features:\n\n### Core Requirements Implemented:\n\n1. **Single-Player Mode**: Computer places a legal fleet automatically (no overlaps/out-of-bounds, standard sizes)\n2. **Computer Turn Logic**: Computer selects valid untargeted coordinates and avoids repeats\n3. **Difficulty Options**: \n   - Easy: Random shots\n   - Standard: After a hit, preferentially targets adjacent cells until ship is sunk\n\n### Key Components:\n\n- `ComputerPlayer` class with automatic ship placement and shot generation\n- `SinglePlayerGameService` extending base game service for single-player flow\n- `Difficulty` enum for Easy/Standard difficulty levels\n- Comprehensive test coverage for acceptance criteria\n\n### Acceptance Criteria Verified:\n\n- ✅ **AC1**: Single-player game initializes with computer fleet that exists, is legal, and hidden\n- ✅ **AC2**: Computer takes turns with untargeted coordinates (never repeats shots)\n- ✅ **AC3**: Standard difficulty targets adjacent cells after hits until ship is sunk\n\n### Technical Implementation:\n\n- Layered architecture following planning documents\n- Model-View-Controller pattern\n- Java 21 with Maven build system\n- JUnit 5 test framework with JaCoCo coverage\n\nCloses #4",
    "state": "opened",
    "created_at": "2025-10-17T02:04:50.045Z",
    "updated_at": "2025-10-17T02:46:02.702Z",
    "merged_by": null,
    "merge_user": null,
    "merged_at": null,
    "closed_by": null,
    "closed_at": null,
    "target_branch": "master",
    "source_branch": "feature/issue-4-us-04-single-player-mode-vs-co",
    "user_notes_count": 0,
    "upvotes": 0,
    "downvotes": 0,
    "author": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "assignees": [],
    "assignee": null,
    "reviewers": [],
    "source_project_id": 203,
    "target_project_id": 203,
    "labels": [],
    "draft": false,
    "imported": false,
    "imported_from": "none",
    "work_in_progress": false,
    "milestone": null,
    "merge_when_pipeline_succeeds": false,
    "merge_status": "unchecked",
    "detailed_merge_status": "unchecked",
    "merge_after": null,
    "sha": "3591d89a3b2cb580b084ee867d01ab2d07f85745",
    "merge_commit_sha": null,
    "squash_commit_sha": null,
    "discussion_locked": null,
    "should_remove_source_branch": null,
    "force_remove_source_branch": null,
    "prepared_at": "2025-10-17T02:04:52.371Z",
    "reference": "!4",
    "references": {
      "short": "!4",
      "relative": "!4",
      "full": "simulationsprojects_bachelorarbeit_ivan_esau/ba_project_a06_battleship!4"
    },
    "web_url": "https://gitlab.nibbler.fh-swf.de/simulationsprojects_bachelorarbeit_ivan_esau/ba_project_a06_battleship/-/merge_requests/4",
    "time_stats": {
      "time_estimate": 0,
      "total_time_spent": 0,
      "human_time_estimate": null,
      "human_total_time_spent": null
    },
    "squash": false,
    "squash_on_merge": false,
    "task_completion_status": {
      "count": 0,
      "completed_count": 0
    },
    "has_conflicts": false,
    "blocking_discussions_resolved": true
  },
  {
    "id": 725,
    "iid": 5,
    "project_id": 203,
    "title": "[US-05] Save, load, and resume a match",
    "description": "## Implementation Summary\n\nThis merge request implements the save/load functionality for the Battleship game as specified in issue #5.\n\n### Key Features Implemented:\n\n**Core Persistence:**\n- `GameState` class with complete serializable game state\n- `GameService.saveGame()` and `GameService.loadGame()` methods\n- File version validation and error handling\n- Support for both single-player and two-player modes\n\n**State Preservation:**\n- Complete match state including board size, fleet layouts, shots, sunk status\n- Current player turn, difficulty/mode, elapsed timer value\n- Hidden information remains concealed from opponent after load\n- Game finished state and winner preservation\n\n**Validation & Error Handling:**\n- File version compatibility checking\n- Corrupted/invalid file detection\n- Graceful error reporting without modifying current game\n- File format validation with checksum-like validation\n\n**Acceptance Criteria Coverage:**\n- ✅ **AC1**: Save/load round-trip preserves complete state (shot history, visible cells, sunk indicators, turn, difficulty, timer)\n- ✅ **AC2**: Corrupted files show error and preserve current game\n- ✅ **AC3**: Finished games remain finished after load with same outcome\n\n### Technical Implementation:\n- Java serialization for game state persistence\n- Comprehensive test coverage with integration tests\n- Idempotent round-trip verification\n- File validation with version checking\n\n### Files Modified/Created:\n- `src/main/java/org/example/model/GameState.java` - Serializable game state\n- `src/main/java/org/example/service/GameService.java` - Save/load operations\n- `src/test/java/org/example/integration/SaveLoadIntegrationTest.java` - Acceptance criteria tests\n- `src/test/java/org/example/service/GameServiceTest.java` - Unit tests\n- `src/test/java/org/example/model/GameStateTest.java` - Model tests\n\nCloses #5",
    "state": "merged",
    "created_at": "2025-10-17T03:22:09.653Z",
    "updated_at": "2025-10-17T04:03:26.658Z",
    "merged_by": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "merge_user": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "merged_at": "2025-10-17T04:03:26.812Z",
    "closed_by": null,
    "closed_at": null,
    "target_branch": "master",
    "source_branch": "feature/issue-5-us-05-save-load-and-resume-a-m",
    "user_notes_count": 0,
    "upvotes": 0,
    "downvotes": 0,
    "author": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "assignees": [],
    "assignee": null,
    "reviewers": [],
    "source_project_id": 203,
    "target_project_id": 203,
    "labels": [],
    "draft": false,
    "imported": false,
    "imported_from": "none",
    "work_in_progress": false,
    "milestone": null,
    "merge_when_pipeline_succeeds": false,
    "merge_status": "can_be_merged",
    "detailed_merge_status": "not_open",
    "merge_after": null,
    "sha": "611c7ff9b049a1a03ef69a08ddbe164dda722899",
    "merge_commit_sha": "c89352b40fb03cadcc780ecf7bb6b653913b8659",
    "squash_commit_sha": null,
    "discussion_locked": null,
    "should_remove_source_branch": null,
    "force_remove_source_branch": null,
    "prepared_at": "2025-10-17T03:22:12.001Z",
    "reference": "!5",
    "references": {
      "short": "!5",
      "relative": "!5",
      "full": "simulationsprojects_bachelorarbeit_ivan_esau/ba_project_a06_battleship!5"
    },
    "web_url": "https://gitlab.nibbler.fh-swf.de/simulationsprojects_bachelorarbeit_ivan_esau/ba_project_a06_battleship/-/merge_requests/5",
    "time_stats": {
      "time_estimate": 0,
      "total_time_spent": 0,
      "human_time_estimate": null,
      "human_total_time_spent": null
    },
    "squash": false,
    "squash_on_merge": false,
    "task_completion_status": {
      "count": 0,
      "completed_count": 0
    },
    "has_conflicts": false,
    "blocking_discussions_resolved": true
  }
]