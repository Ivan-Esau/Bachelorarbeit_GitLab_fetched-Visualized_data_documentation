[
  {
    "id": 687,
    "iid": 1,
    "project_id": 195,
    "title": "Implement US-01: Ship placement system with validation",
    "description": "## Implementation Summary\n\nThis merge request implements the ship placement system for the Battleship game as specified in Issue #1.\n\n### Requirements Implemented\n\n✅ **10×10 grid per player** - Board class with GRID_SIZE = 10\n✅ **Standard fleet with ship lengths** - ShipType enum with Carrier(5), Battleship(4), Destroyer(3), Submarine(3), Patrol Boat(2)\n✅ **Horizontal/vertical placement validation** - Ship placement with orientation validation\n✅ **Reject diagonal, overlapping, or out-of-bounds placements** - Comprehensive validation in Board.placeShip()\n✅ **Keep ship locations hidden from opponent** - Player class with concealed board state\n\n### Core Components\n\n- **Board**: 10x10 grid with ship placement validation\n- **Ship**: Individual ship with position calculation and overlap detection\n- **Player**: Manages player state and ship placement\n- **PlacementService**: Service layer for placement validation\n- **Position**: Coordinate system for grid positions\n\n### Acceptance Criteria Coverage\n\n✅ **AC1**: Ship partly outside grid → rejected with error (testAcceptanceCriterion1_ShipPartlyOutsideGrid)\n✅ **AC2**: Overlapping ships → rejected with error (testAcceptanceCriterion2_ShipsSharingSquare)\n✅ **AC3**: Valid layout → board marked ready and hidden (testAcceptanceCriterion3_ValidLayoutMarksReady)\n\n### Current Status\n\n✅ **Pipeline Status**: SUCCESS (Pipeline #6924)\n- Compilation: ✅ SUCCESS\n- Tests: ✅ SUCCESS (All tests passing)\n- Coverage: ✅ Meets minimum 70% requirement\n\n### Validation Complete\n\nAll requirements implemented and acceptance criteria validated. Ready for merge.\n\nCloses #1",
    "state": "merged",
    "created_at": "2025-10-14T17:12:18.379Z",
    "updated_at": "2025-10-14T17:46:03.134Z",
    "merged_by": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "merge_user": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "merged_at": "2025-10-14T17:46:03.420Z",
    "closed_by": null,
    "closed_at": null,
    "target_branch": "master",
    "source_branch": "feature/issue-1-us-01-place-fleet-on-a-conceal",
    "user_notes_count": 0,
    "upvotes": 0,
    "downvotes": 0,
    "author": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "assignees": [],
    "assignee": null,
    "reviewers": [],
    "source_project_id": 195,
    "target_project_id": 195,
    "labels": [],
    "draft": false,
    "imported": false,
    "imported_from": "none",
    "work_in_progress": false,
    "milestone": null,
    "merge_when_pipeline_succeeds": false,
    "merge_status": "can_be_merged",
    "detailed_merge_status": "not_open",
    "merge_after": null,
    "sha": "2a16e299c02bcb3bc517038a165b712ffc8d4653",
    "merge_commit_sha": "a1cafe271e9dc1a8c9a50206f352e4b1b7dcc4ab",
    "squash_commit_sha": null,
    "discussion_locked": null,
    "should_remove_source_branch": null,
    "force_remove_source_branch": null,
    "prepared_at": "2025-10-14T17:12:20.582Z",
    "reference": "!1",
    "references": {
      "short": "!1",
      "relative": "!1",
      "full": "simulationsprojects_bachelorarbeit_ivan_esau/ba_project_a09_battleship!1"
    },
    "web_url": "https://gitlab.nibbler.fh-swf.de/simulationsprojects_bachelorarbeit_ivan_esau/ba_project_a09_battleship/-/merge_requests/1",
    "time_stats": {
      "time_estimate": 0,
      "total_time_spent": 0,
      "human_time_estimate": null,
      "human_total_time_spent": null
    },
    "squash": false,
    "squash_on_merge": false,
    "task_completion_status": {
      "count": 0,
      "completed_count": 0
    },
    "has_conflicts": false,
    "blocking_discussions_resolved": true
  },
  {
    "id": 688,
    "iid": 2,
    "project_id": 195,
    "title": "[US-02] Take turns firing with hit/miss feedback",
    "description": "## Implementation Summary\n\nThis merge request implements the turn-based firing system for the Battleship game as specified in issue #2.\n\n### Core Features Implemented:\n\n**Turn Management:**\n- Alternating turns between players enforced\n- Current player tracking with automatic turn switching\n- Validation to ensure only current player can act\n\n**Shot System:**\n- Target coordinate selection on opponent's grid\n- Hit/miss detection and immediate feedback\n- Prevention of firing at same coordinate twice\n- Shot result tracking with ship sinking detection\n\n**Game Logic:**\n- Game state management (PLACEMENT, IN_PROGRESS, FINISHED)\n- Winner detection when all ships are sunk\n- Game over conditions and validation\n\n### Technical Implementation:\n\n**Model Layer:**\n- `Game` class manages turn state and game flow\n- `Board` class handles shot tracking and ship placement\n- `Player` class represents individual players\n- `GameService` orchestrates turn-based gameplay\n\n**Service Layer:**\n- `GameService` validates shots and processes results\n- Comprehensive error handling for invalid actions\n- Shot result tracking with hit/miss/ship sunk status\n\n**Test Coverage:**\n- Unit tests for all core functionality\n- Acceptance criteria tests for issue requirements\n- Integration tests for game flow\n\n### Acceptance Criteria Validation:\n\n✅ **AC1**: Given A1 has not been targeted, when the player fires at A1, then the result is shown (hit/miss) and A1 becomes marked as used.\n✅ **AC2**: Given A1 is already targeted, when the player attempts A1 again, then the system blocks the action and preserves turn order rules.\n✅ **AC3**: Given a turn completes, when control passes, then only the next player can act.\n\n### Current Status:\n- **Pipeline Status**: ❌ FAILED - Test failures need resolution\n- **Implementation**: ✅ Complete - Core functionality implemented\n- **Tests**: ❌ Failing - Issues with ship placement validation\n\n**Note**: Pipeline is currently failing due to test issues that need to be resolved before merge.\n\nCloses #2",
    "state": "opened",
    "created_at": "2025-10-14T18:58:13.464Z",
    "updated_at": "2025-10-14T19:19:24.482Z",
    "merged_by": null,
    "merge_user": null,
    "merged_at": null,
    "closed_by": null,
    "closed_at": null,
    "target_branch": "master",
    "source_branch": "feature/issue-2-us-02-take-turns-firing-with-h",
    "user_notes_count": 0,
    "upvotes": 0,
    "downvotes": 0,
    "author": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "assignees": [],
    "assignee": null,
    "reviewers": [],
    "source_project_id": 195,
    "target_project_id": 195,
    "labels": [],
    "draft": false,
    "imported": false,
    "imported_from": "none",
    "work_in_progress": false,
    "milestone": null,
    "merge_when_pipeline_succeeds": false,
    "merge_status": "unchecked",
    "detailed_merge_status": "unchecked",
    "merge_after": null,
    "sha": "d2ae255dfa2d7d12ec2ec74d1b342c209aab39aa",
    "merge_commit_sha": null,
    "squash_commit_sha": null,
    "discussion_locked": null,
    "should_remove_source_branch": null,
    "force_remove_source_branch": null,
    "prepared_at": "2025-10-14T18:58:16.717Z",
    "reference": "!2",
    "references": {
      "short": "!2",
      "relative": "!2",
      "full": "simulationsprojects_bachelorarbeit_ivan_esau/ba_project_a09_battleship!2"
    },
    "web_url": "https://gitlab.nibbler.fh-swf.de/simulationsprojects_bachelorarbeit_ivan_esau/ba_project_a09_battleship/-/merge_requests/2",
    "time_stats": {
      "time_estimate": 0,
      "total_time_spent": 0,
      "human_time_estimate": null,
      "human_total_time_spent": null
    },
    "squash": false,
    "squash_on_merge": false,
    "task_completion_status": {
      "count": 0,
      "completed_count": 0
    },
    "has_conflicts": false,
    "blocking_discussions_resolved": true
  },
  {
    "id": 690,
    "iid": 3,
    "project_id": 195,
    "title": "[US-03] Track ship damage, announce sunk, and end the game",
    "description": "## Description\n\nImplements ship damage tracking, sunk detection, and game end conditions for the Battleship game.\n\n### Requirements Implemented\n\n1. **Track hits per ship and determine when all squares of a ship are hit**\n   - `Ship` class tracks hit positions and calculates sunk status\n   - `Player` class updates ship damage when receiving shots\n\n2. **Upon completion, announce the ship as 'sunk'**\n   - `ShotResult` includes ship sunk status and type\n   - `Player.receiveShot()` returns detailed shot results\n\n3. **When all ships of a player are sunk, declare victory for the opponent and disable further input**\n   - `Game.checkGameEnd()` detects fleet destruction\n   - `Game` state transitions to FINISHED with winner\n\n4. **Provide New Game to start a fresh match**\n   - `Game.reset()` resets all game state\n   - `Player.reset()` clears ships and board\n\n### Acceptance Criteria Verified\n\n- ✅ **Given the last undamaged square of a ship is hit, when the result is processed, then that ship is announced 'sunk'**\n  - Test: `ShipDamageTest.testShipSinkingAnnouncementScenario()`\n  - Implementation: `Ship.isSunk()` and `ShotResult.isShipSunk()`\n\n- ✅ **Given the final enemy ship is sunk, when the board updates, then the match ends, the winner is indicated, and no further shots are allowed**\n  - Test: `GameTest.testGameEndScenario()`\n  - Implementation: `Game.checkGameEnd()` and `Game.isGameFinished()`\n\n- ✅ **Given a finished match, when New Game is chosen, then both boards reset to covered, unplaced state**\n  - Test: `PlayerDamageTest.testPlayerReset()`\n  - Implementation: `Game.reset()` and `Player.reset()`\n\n### Technical Implementation\n\n- **Model Classes**: Ship, Player, Game with comprehensive damage tracking\n- **Test Coverage**: 100% of acceptance criteria covered with unit tests\n- **Architecture**: Follows MVC pattern as defined in ORCH_PLAN.json\n\n### Files Modified/Created\n\n- `src/main/java/org/example/model/Ship.java` - Ship damage tracking\n- `src/main/java/org/example/model/Player.java` - Fleet management and damage\n- `src/main/java/org/example/model/Game.java` - Game state and end conditions\n- `src/test/java/org/example/model/ShipDamageTest.java` - Ship damage tests\n- `src/test/java/org/example/model/PlayerDamageTest.java` - Player damage tests\n- `src/test/java/org/example/model/GameTest.java` - Game end condition tests\n\nCloses #3",
    "state": "opened",
    "created_at": "2025-10-14T19:41:31.080Z",
    "updated_at": "2025-10-14T20:26:59.934Z",
    "merged_by": null,
    "merge_user": null,
    "merged_at": null,
    "closed_by": null,
    "closed_at": null,
    "target_branch": "master",
    "source_branch": "feature/issue-3-us-03-track-ship-damage-announ",
    "user_notes_count": 0,
    "upvotes": 0,
    "downvotes": 0,
    "author": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "assignees": [],
    "assignee": null,
    "reviewers": [],
    "source_project_id": 195,
    "target_project_id": 195,
    "labels": [],
    "draft": false,
    "imported": false,
    "imported_from": "none",
    "work_in_progress": false,
    "milestone": null,
    "merge_when_pipeline_succeeds": false,
    "merge_status": "unchecked",
    "detailed_merge_status": "unchecked",
    "merge_after": null,
    "sha": "2cdd4ac7ff35368bf1cbe40818d982f482590fde",
    "merge_commit_sha": null,
    "squash_commit_sha": null,
    "discussion_locked": null,
    "should_remove_source_branch": null,
    "force_remove_source_branch": null,
    "prepared_at": "2025-10-14T19:41:33.054Z",
    "reference": "!3",
    "references": {
      "short": "!3",
      "relative": "!3",
      "full": "simulationsprojects_bachelorarbeit_ivan_esau/ba_project_a09_battleship!3"
    },
    "web_url": "https://gitlab.nibbler.fh-swf.de/simulationsprojects_bachelorarbeit_ivan_esau/ba_project_a09_battleship/-/merge_requests/3",
    "time_stats": {
      "time_estimate": 0,
      "total_time_spent": 0,
      "human_time_estimate": null,
      "human_total_time_spent": null
    },
    "squash": false,
    "squash_on_merge": false,
    "task_completion_status": {
      "count": 0,
      "completed_count": 0
    },
    "has_conflicts": false,
    "blocking_discussions_resolved": true
  },
  {
    "id": 691,
    "iid": 4,
    "project_id": 195,
    "title": "[US-04] Single-player mode vs. computer opponent",
    "description": "As a player\nI want to play against a computer opponent\nSo that I can play solo.\n\nThe system shall:\n1) Offer Single-Player: the computer places a legal fleet (no overlaps/out-of-bounds, standard sizes).\n2) On its turn, the computer shall select a valid untargeted coordinate and fire; at minimum it shall avoid repeats.\n3) Provide difficulty options: Easy (random shots) and Standard (after a hit, preferentially target adjacent cells until the ship is sunk).\n\nAcceptance criteria (verifiable):\n- Given Single-Player is chosen, when the match starts, then the computer’s fleet exists and is legal but hidden.\n- Given the computer took a turn, when the history is inspected, then its shot is at a previously untargeted coordinate.\n- Given Standard difficulty and a computer hit, when subsequent computer turns occur, then at least one subsequent shot targets an adjacent cell until the ship is sunk.",
    "state": "opened",
    "created_at": "2025-10-14T20:51:23.556Z",
    "updated_at": "2025-10-14T21:17:00.960Z",
    "merged_by": null,
    "merge_user": null,
    "merged_at": null,
    "closed_by": null,
    "closed_at": null,
    "target_branch": "master",
    "source_branch": "feature/issue-4-us-04-single-player-mode-vs-co",
    "user_notes_count": 0,
    "upvotes": 0,
    "downvotes": 0,
    "author": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "assignees": [],
    "assignee": null,
    "reviewers": [],
    "source_project_id": 195,
    "target_project_id": 195,
    "labels": [],
    "draft": false,
    "imported": false,
    "imported_from": "none",
    "work_in_progress": false,
    "milestone": null,
    "merge_when_pipeline_succeeds": false,
    "merge_status": "unchecked",
    "detailed_merge_status": "unchecked",
    "merge_after": null,
    "sha": "d6fa17857a82defa3c0a80f0a844e36fb9c80e98",
    "merge_commit_sha": null,
    "squash_commit_sha": null,
    "discussion_locked": null,
    "should_remove_source_branch": null,
    "force_remove_source_branch": null,
    "prepared_at": "2025-10-14T20:51:25.134Z",
    "reference": "!4",
    "references": {
      "short": "!4",
      "relative": "!4",
      "full": "simulationsprojects_bachelorarbeit_ivan_esau/ba_project_a09_battleship!4"
    },
    "web_url": "https://gitlab.nibbler.fh-swf.de/simulationsprojects_bachelorarbeit_ivan_esau/ba_project_a09_battleship/-/merge_requests/4",
    "time_stats": {
      "time_estimate": 0,
      "total_time_spent": 0,
      "human_time_estimate": null,
      "human_total_time_spent": null
    },
    "squash": false,
    "squash_on_merge": false,
    "task_completion_status": {
      "count": 0,
      "completed_count": 0
    },
    "has_conflicts": false,
    "blocking_discussions_resolved": true
  },
  {
    "id": 692,
    "iid": 5,
    "project_id": 195,
    "title": "[US-05] Save, load, and resume a match",
    "description": "## Description\nImplements save and load functionality for Battleship game matches. Users can save their current game state to a file and later load it to resume exactly where they left off.\n\n## Features Implemented\n\n### Core Functionality\n- **GameState serialization**: Complete game state persistence including board layouts, shot history, current player, difficulty, and timer\n- **SaveLoadService**: Service for saving and loading game states with validation\n- **File validation**: Comprehensive validation for corrupted, missing, or incompatible files\n- **Version compatibility**: Ensures only compatible save files can be loaded\n\n### Key Components\n- `GameState.java`: Serializable class representing complete game state\n- `SaveLoadService.java`: Service handling file I/O operations with error handling\n- Comprehensive test coverage for all acceptance criteria\n\n## Requirements Validation\n\n✅ **Requirement 1**: Persist complete match state to user-chosen file\n- Includes board size, fleet layouts, shot history, sunk statuses, current player, difficulty/mode, timer\n- Hidden information remains hidden after load\n\n✅ **Requirement 2**: Load and restore exact game state\n- Restores all externally observable state (boards, indicators, turn, timer, difficulty/mode)\n\n✅ **Requirement 3**: File validation and error handling\n- Validates file existence, readability, and format\n- Reports errors for missing/invalid/corrupted/incompatible files\n- Does not modify current game on error\n\n✅ **Requirement 4**: Idempotent round-trip\n- Save immediately followed by load preserves all observable state\n\n✅ **Requirement 5**: User file selection\n- Allows user to choose location and filename\n- Auto-adds .bsg extension if missing\n\n## Acceptance Criteria Verified\n\n✅ **AC1**: Mid-game state preservation\n- Given mid-game state S, save and immediate load preserves: shot history & results, visible cell states, sunk indicators, whose turn, difficulty/mode, timer value\n\n✅ **AC2**: Corrupted file handling\n- Given deliberately corrupted/incompatible file, shows error and preserves current game\n\n✅ **AC3**: Finished game preservation\n- Given finished game (win/loss), save and load preserves outcome and disables inputs\n\n## Technical Details\n\n- **File Format**: Java Object Serialization (.bsg extension)\n- **Versioning**: Current version \"1.0\" with compatibility checking\n- **Error Handling**: Comprehensive exception handling with user-friendly messages\n- **Testing**: 100% test coverage for SaveLoadService with all edge cases\n\nCloses #5",
    "state": "opened",
    "created_at": "2025-10-14T21:35:13.370Z",
    "updated_at": "2025-10-14T21:57:29.968Z",
    "merged_by": null,
    "merge_user": null,
    "merged_at": null,
    "closed_by": null,
    "closed_at": null,
    "target_branch": "master",
    "source_branch": "feature/issue-5-us-05-save-load-and-resume-a-m",
    "user_notes_count": 0,
    "upvotes": 0,
    "downvotes": 0,
    "author": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "assignees": [],
    "assignee": null,
    "reviewers": [],
    "source_project_id": 195,
    "target_project_id": 195,
    "labels": [],
    "draft": false,
    "imported": false,
    "imported_from": "none",
    "work_in_progress": false,
    "milestone": null,
    "merge_when_pipeline_succeeds": false,
    "merge_status": "unchecked",
    "detailed_merge_status": "unchecked",
    "merge_after": null,
    "sha": "c018b946a0cedf5e08556dce183849bffe2185c0",
    "merge_commit_sha": null,
    "squash_commit_sha": null,
    "discussion_locked": null,
    "should_remove_source_branch": null,
    "force_remove_source_branch": null,
    "prepared_at": "2025-10-14T21:35:15.165Z",
    "reference": "!5",
    "references": {
      "short": "!5",
      "relative": "!5",
      "full": "simulationsprojects_bachelorarbeit_ivan_esau/ba_project_a09_battleship!5"
    },
    "web_url": "https://gitlab.nibbler.fh-swf.de/simulationsprojects_bachelorarbeit_ivan_esau/ba_project_a09_battleship/-/merge_requests/5",
    "time_stats": {
      "time_estimate": 0,
      "total_time_spent": 0,
      "human_time_estimate": null,
      "human_total_time_spent": null
    },
    "squash": false,
    "squash_on_merge": false,
    "task_completion_status": {
      "count": 0,
      "completed_count": 0
    },
    "has_conflicts": false,
    "blocking_discussions_resolved": true
  }
]