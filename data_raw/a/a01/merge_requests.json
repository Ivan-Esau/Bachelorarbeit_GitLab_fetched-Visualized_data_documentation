[
  {
    "id": 658,
    "iid": 1,
    "project_id": 186,
    "title": "[US-01] Place fleet on a concealed board",
    "description": "## Implementation Summary\n\nThis merge request implements the first user story for the Battleship game: **Place fleet on a concealed board**.\n\n### Requirements Implemented\n\n1. ✅ **10×10 grid per player** - Board class with 10x10 grid implementation\n2. ✅ **Standard fleet with ship lengths** - Carrier (5), Battleship (4), Destroyer (3), Submarine (3), Patrol Boat (2)\n3. ✅ **Placement validation** - Horizontal/vertical placement only, rejects diagonal, overlapping, or out-of-bounds placements\n4. ✅ **Concealed boards** - Each player's ship locations remain hidden from the opponent\n\n### Acceptance Criteria Verified\n\n- ✅ **Out-of-bounds rejection**: Ship placement outside grid boundaries is rejected with error\n- ✅ **Overlap prevention**: Ships cannot overlap; placement is rejected if any square is already occupied\n- ✅ **Board readiness**: Valid layout marks board as ready while keeping ship locations concealed\n\n### Technical Implementation\n\n- **Package Structure**: Layered architecture as per ORCH_PLAN.json\n- **Core Classes**: Board, Ship, Player, Coordinate\n- **Validation Logic**: Comprehensive placement validation with error handling\n- **Testing**: JUnit tests covering all acceptance criteria\n\nCloses #1",
    "state": "merged",
    "created_at": "2025-10-12T03:14:24.231Z",
    "updated_at": "2025-10-12T03:16:18.236Z",
    "merged_by": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "merge_user": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "merged_at": "2025-10-12T03:16:17.960Z",
    "closed_by": null,
    "closed_at": null,
    "target_branch": "master",
    "source_branch": "feature/issue-1-us-01-place-fleet-on-a-conceal",
    "user_notes_count": 0,
    "upvotes": 0,
    "downvotes": 0,
    "author": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "assignees": [],
    "assignee": null,
    "reviewers": [],
    "source_project_id": 186,
    "target_project_id": 186,
    "labels": [],
    "draft": false,
    "imported": false,
    "imported_from": "none",
    "work_in_progress": false,
    "milestone": null,
    "merge_when_pipeline_succeeds": false,
    "merge_status": "can_be_merged",
    "detailed_merge_status": "not_open",
    "merge_after": null,
    "sha": "ddfe3786c4631e4b81588d9dd929e06a02c0298e",
    "merge_commit_sha": "f9501e15262627b87a4d227c3db8e846c332e7d1",
    "squash_commit_sha": null,
    "discussion_locked": null,
    "should_remove_source_branch": false,
    "force_remove_source_branch": null,
    "prepared_at": "2025-10-12T03:14:27.004Z",
    "reference": "!1",
    "references": {
      "short": "!1",
      "relative": "!1",
      "full": "simulationsprojects_bachelorarbeit_ivan_esau/ba_project_a01_battleship!1"
    },
    "web_url": "https://gitlab.nibbler.fh-swf.de/simulationsprojects_bachelorarbeit_ivan_esau/ba_project_a01_battleship/-/merge_requests/1",
    "time_stats": {
      "time_estimate": 0,
      "total_time_spent": 0,
      "human_time_estimate": null,
      "human_total_time_spent": null
    },
    "squash": false,
    "squash_on_merge": false,
    "task_completion_status": {
      "count": 0,
      "completed_count": 0
    },
    "has_conflicts": false,
    "blocking_discussions_resolved": true
  },
  {
    "id": 659,
    "iid": 2,
    "project_id": 186,
    "title": "[US-02] Take turns firing with hit/miss feedback",
    "description": "## Implementation Summary\n\nThis merge request implements the turn-based firing system for the Battleship game as specified in issue #2.\n\n### Requirements Implemented\n\n✅ **1) Enforce alternating turns**\n- Game state management with automatic turn switching after each shot\n- Player 1 starts first, then alternates with Player 2\n- Turn order preserved even when invalid actions are attempted\n\n✅ **2) Let the active player select a target coordinate on the opponent's grid**\n- Coordinate input validation (A1-J10 format)\n- Interactive CLI interface for target selection\n- Real-time board display showing opponent's tracking view\n\n✅ **3) Report 'hit' or 'miss' immediately and record the result on both players' tracking views**\n- Immediate feedback with clear hit/miss messages\n- Board state updates with HIT/MISS markers\n- Opponent view properly conceals ship positions while showing hit/miss results\n\n✅ **4) Prevent firing at the same coordinate twice**\n- Coordinate targeting validation\n- Exception handling for duplicate shots\n- User-friendly error messages\n\n### Acceptance Criteria Validated\n\n✅ **AC1**: Given A1 has not been targeted, when the player fires at A1, then the result is shown (hit/miss) and A1 becomes marked as used\n- Verified through comprehensive unit tests\n- Coordinate state properly updated to HIT or MISS\n- Shot result returned and displayed\n\n✅ **AC2**: Given A1 is already targeted, when the player attempts A1 again, then the system blocks the action and preserves turn order rules\n- Validation prevents duplicate targeting\n- Turn order maintained even when invalid actions attempted\n- Exception handling with clear error messages\n\n✅ **AC3**: Given a turn completes, when control passes, then only the next player can act\n- Automatic turn switching after each valid shot\n- Game state enforces turn order\n- Current player tracking maintained throughout gameplay\n\n### Technical Implementation\n\n**Core Components:**\n- `Game.java` - Turn management and game state\n- `Board.java` - Shot recording and hit/miss detection  \n- `GameService.java` - Business logic coordination\n- `Main.java` - CLI interface and user interaction\n\n**Key Features:**\n- 10x10 grid with proper coordinate system\n- Ship placement validation and collision detection\n- Hit detection with ship damage tracking\n- Opponent view that conceals ship positions\n- Turn-based gameplay with automatic switching\n\n**Testing:**\n- Comprehensive unit tests for all acceptance criteria\n- Integration tests for full gameplay flow\n- Edge case handling for invalid inputs\n\nCloses #2",
    "state": "merged",
    "created_at": "2025-10-12T03:42:01.894Z",
    "updated_at": "2025-10-12T03:46:00.505Z",
    "merged_by": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "merge_user": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "merged_at": "2025-10-12T03:46:00.207Z",
    "closed_by": null,
    "closed_at": null,
    "target_branch": "master",
    "source_branch": "feature/issue-2-us-02-take-turns-firing-with-h",
    "user_notes_count": 0,
    "upvotes": 0,
    "downvotes": 0,
    "author": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "assignees": [],
    "assignee": null,
    "reviewers": [],
    "source_project_id": 186,
    "target_project_id": 186,
    "labels": [],
    "draft": false,
    "imported": false,
    "imported_from": "none",
    "work_in_progress": false,
    "milestone": null,
    "merge_when_pipeline_succeeds": false,
    "merge_status": "can_be_merged",
    "detailed_merge_status": "not_open",
    "merge_after": null,
    "sha": "ac1902c383168278f156a5dd4a2701f3d0729b60",
    "merge_commit_sha": "5cd31b12d85c6446dadca59d7b11bd4cc6e526a1",
    "squash_commit_sha": null,
    "discussion_locked": null,
    "should_remove_source_branch": false,
    "force_remove_source_branch": null,
    "prepared_at": "2025-10-12T03:42:03.710Z",
    "reference": "!2",
    "references": {
      "short": "!2",
      "relative": "!2",
      "full": "simulationsprojects_bachelorarbeit_ivan_esau/ba_project_a01_battleship!2"
    },
    "web_url": "https://gitlab.nibbler.fh-swf.de/simulationsprojects_bachelorarbeit_ivan_esau/ba_project_a01_battleship/-/merge_requests/2",
    "time_stats": {
      "time_estimate": 0,
      "total_time_spent": 0,
      "human_time_estimate": null,
      "human_total_time_spent": null
    },
    "squash": false,
    "squash_on_merge": false,
    "task_completion_status": {
      "count": 0,
      "completed_count": 0
    },
    "has_conflicts": false,
    "blocking_discussions_resolved": true
  },
  {
    "id": 660,
    "iid": 3,
    "project_id": 186,
    "title": "[US-03] Track ship damage, announce sunk, and end the game",
    "description": "## Implementation Summary\n\nThis merge request implements the complete ship damage tracking and game completion functionality for US-03.\n\n### Requirements Implemented\n\n✅ **1) Track hits per ship and determine when all squares of a ship are hit**\n- `Ship` class tracks hits per position with boolean array\n- `isSunk()` method checks if all positions are hit\n- `getHitCount()` method provides current damage status\n\n✅ **2) Upon completion, announce the ship as 'sunk'**\n- Ship sinking detection in `Board.allShipsSunk()`\n- Game state management in `Game.executeShot()`\n- Integration with game flow for announcements\n\n✅ **3) When all ships of a player are sunk, declare victory for the opponent and disable further input**\n- `Game.getWinner()` method identifies winner\n- `Game.executeShot()` throws `IllegalStateException` when game finished\n- `Player.hasLost()` method checks if player has lost\n\n✅ **4) Provide New Game to start a fresh match**\n- `GameService.createNewGame()` resets all state\n- Complete board and ship reset functionality\n\n### Acceptance Criteria Validated\n\n✅ **AC1**: Given the last undamaged square of a ship is hit, when the result is processed, then that ship is announced 'sunk'\n- Test: `acceptanceCriterion1_lastUndamagedSquareHit_shipAnnouncedSunk()`\n- Validates ship sinking detection and announcement\n\n✅ **AC2**: Given the final enemy ship is sunk, when the board updates, then the match ends, the winner is indicated, and no further shots are allowed\n- Test: `acceptanceCriterion2_finalEnemyShipSunk_matchEndsWithWinnerAndNoFurtherShots()`\n- Validates game completion and input blocking\n\n✅ **AC3**: Given a finished match, when New Game is chosen, then both boards reset to covered, unplaced state\n- Test: `acceptanceCriterion3_finishedMatch_newGameResetsBoards()`\n- Validates complete game state reset\n\n### Technical Implementation\n\n**Core Classes:**\n- `Ship`: Damage tracking with `hits[]` array and `isSunk()` method\n- `Board`: Ship management with `allShipsSunk()` detection\n- `Game`: Game state management with `FINISHED` state and winner determination\n- `Player`: Loss detection with `hasLost()` method\n\n**Test Coverage:**\n- Comprehensive acceptance criteria tests in `AcceptanceCriteriaTest_Issue3.java`\n- Additional validation tests for edge cases\n- Integration tests for complete game flow\n\n### Files Modified/Created\n\n**Model Layer:**\n- `Ship.java` - Enhanced with damage tracking\n- `Board.java` - Added ship sinking detection\n- `Game.java` - Added game completion logic\n- `Player.java` - Added loss detection\n\n**Service Layer:**\n- `GameService.java` - Game flow management\n\n**Test Layer:**\n- `AcceptanceCriteriaTest_Issue3.java` - Complete acceptance criteria validation\n\nCloses #3",
    "state": "opened",
    "created_at": "2025-10-12T04:14:32.053Z",
    "updated_at": "2025-10-12T04:46:19.586Z",
    "merged_by": null,
    "merge_user": null,
    "merged_at": null,
    "closed_by": null,
    "closed_at": null,
    "target_branch": "master",
    "source_branch": "feature/issue-3-us-03-track-ship-damage-announ",
    "user_notes_count": 0,
    "upvotes": 0,
    "downvotes": 0,
    "author": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "assignees": [],
    "assignee": null,
    "reviewers": [],
    "source_project_id": 186,
    "target_project_id": 186,
    "labels": [],
    "draft": false,
    "imported": false,
    "imported_from": "none",
    "work_in_progress": false,
    "milestone": null,
    "merge_when_pipeline_succeeds": false,
    "merge_status": "unchecked",
    "detailed_merge_status": "unchecked",
    "merge_after": null,
    "sha": "6978b856315aa4290cd84bc3f6df9904ccfb4eaf",
    "merge_commit_sha": null,
    "squash_commit_sha": null,
    "discussion_locked": null,
    "should_remove_source_branch": null,
    "force_remove_source_branch": null,
    "prepared_at": "2025-10-12T04:14:34.044Z",
    "reference": "!3",
    "references": {
      "short": "!3",
      "relative": "!3",
      "full": "simulationsprojects_bachelorarbeit_ivan_esau/ba_project_a01_battleship!3"
    },
    "web_url": "https://gitlab.nibbler.fh-swf.de/simulationsprojects_bachelorarbeit_ivan_esau/ba_project_a01_battleship/-/merge_requests/3",
    "time_stats": {
      "time_estimate": 0,
      "total_time_spent": 0,
      "human_time_estimate": null,
      "human_total_time_spent": null
    },
    "squash": false,
    "squash_on_merge": false,
    "task_completion_status": {
      "count": 0,
      "completed_count": 0
    },
    "has_conflicts": false,
    "blocking_discussions_resolved": true
  }
]