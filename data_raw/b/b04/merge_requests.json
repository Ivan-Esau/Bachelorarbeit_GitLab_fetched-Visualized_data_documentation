[
  {
    "id": 707,
    "iid": 1,
    "project_id": 200,
    "title": "[US-01] Setting ships somewhere on the board",
    "description": "## Implementation Summary\n\nThis merge request implements the core ship placement functionality for the Battleship game as described in issue #1.\n\n### Features Implemented\n\n**Core Model Classes:**\n- `Board` - 10x10 game board with ship placement validation\n- `Ship` - Ship entity with length, position, and orientation\n- `Coordinate` - Immutable coordinate representation\n- `Player` - Player entity with board and ship management\n\n**Key Functionality:**\n- ✅ 10x10 board implementation\n- ✅ Ship placement with validation (no overlaps, within bounds)\n- ✅ Required ship configuration: 5, 4, 3, 3, 2 length ships\n- ✅ Straight placement only (no diagonal)\n- ✅ Board readiness validation when all ships placed\n- ✅ Ship overlap prevention\n- ✅ Out-of-bounds placement prevention\n\n**Acceptance Criteria Met:**\n1. ✅ **Out-of-bounds prevention**: Ship constructor throws `IllegalArgumentException` for invalid placements\n2. ✅ **Overlap prevention**: `Board.placeShip()` returns `false` for overlapping ships\n3. ✅ **Board readiness**: `Board.setReady()` only succeeds when all ships are placed\n\n### Technical Details\n\n- **Architecture**: Follows MVC pattern with layered structure\n- **Validation**: Comprehensive input validation in all model classes\n- **Testing**: Complete test coverage for all acceptance criteria\n- **Immutability**: Coordinate class is immutable for thread safety\n\n### Testing\n\nAll acceptance criteria are covered by comprehensive unit tests:\n- `testPlaceShip_outOfBoundsShip_preventsPlacement()` - AC 1\n- `testPlaceShip_overlappingShips_preventsOverlap()` - AC 2  \n- `testSetReady_completeConfiguration_success()` - AC 3\n\n### Pipeline Status\n✅ Pipeline #7639: **SUCCESS**\n- Compile job: ✅ Success\n- Test job: ✅ Success\n\nCloses #1",
    "state": "merged",
    "created_at": "2025-10-15T19:19:56.498Z",
    "updated_at": "2025-10-15T19:23:03.151Z",
    "merged_by": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "merge_user": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "merged_at": "2025-10-15T19:23:03.299Z",
    "closed_by": null,
    "closed_at": null,
    "target_branch": "master",
    "source_branch": "feature/issue-1-us-01-setting-ships-somewhere-",
    "user_notes_count": 0,
    "upvotes": 0,
    "downvotes": 0,
    "author": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "assignees": [],
    "assignee": null,
    "reviewers": [],
    "source_project_id": 200,
    "target_project_id": 200,
    "labels": [],
    "draft": false,
    "imported": false,
    "imported_from": "none",
    "work_in_progress": false,
    "milestone": null,
    "merge_when_pipeline_succeeds": false,
    "merge_status": "can_be_merged",
    "detailed_merge_status": "not_open",
    "merge_after": null,
    "sha": "c0fb5fafb76ac11b249f2c80e0d8013ec8b3130b",
    "merge_commit_sha": "2194173ddb440580b2e4533eb9ed08e65f9a1e57",
    "squash_commit_sha": null,
    "discussion_locked": null,
    "should_remove_source_branch": null,
    "force_remove_source_branch": null,
    "prepared_at": "2025-10-15T19:19:58.421Z",
    "reference": "!1",
    "references": {
      "short": "!1",
      "relative": "!1",
      "full": "simulationsprojects_bachelorarbeit_ivan_esau/ba_project_b04_battleship!1"
    },
    "web_url": "https://gitlab.nibbler.fh-swf.de/simulationsprojects_bachelorarbeit_ivan_esau/ba_project_b04_battleship/-/merge_requests/1",
    "time_stats": {
      "time_estimate": 0,
      "total_time_spent": 0,
      "human_time_estimate": null,
      "human_total_time_spent": null
    },
    "squash": false,
    "squash_on_merge": false,
    "task_completion_status": {
      "count": 0,
      "completed_count": 0
    },
    "has_conflicts": false,
    "blocking_discussions_resolved": true
  },
  {
    "id": 708,
    "iid": 2,
    "project_id": 200,
    "title": "[US-02] Alternating shooting with feedback",
    "description": "## Implementation Summary\n\nThis merge request implements the core alternating shooting functionality for the Battleship game as specified in issue #2.\n\n### What's Implemented\n\n**Core Features:**\n- Turn-based shooting system with player alternation\n- Shot result feedback (hit/miss/sunk/game over)\n- Coordinate-based targeting on enemy board\n- Shot tracking to prevent duplicate shots\n- Game state management (in progress/finished)\n\n**Key Components:**\n- `Game` class manages overall game state and turn switching\n- `ShotResult` enum provides clear feedback messages\n- `Player` tracks shots taken and hits registered\n- `Board` manages ship placement and coordinate validation\n\n### Technical Implementation\n\n**Architecture:**\n- Follows MVC pattern as specified in planning documents\n- Layered structure with clear separation of concerns\n- Comprehensive test coverage for core game logic\n\n**Test Coverage:**\n- Unit tests for all model classes\n- Integration tests for game flow scenarios\n- Acceptance criteria validation tests\n\n### Current Status\n\n⚠️ **PIPELINE STATUS: FAILED**\n\nThe implementation is functionally complete but has test failures that need to be addressed:\n\n**Critical Issues:**\n1. **Duplicate shot detection** - System allows shooting at same coordinate multiple times\n2. **Ship sinking detection** - Doesn't properly detect when ships are completely sunk\n3. **Game over detection** - Doesn't properly detect when all ships are destroyed\n4. **Turn management** - Invalid shots still switch turns\n\n**Acceptance Criteria Status:**\n- ✅ Players take turns one after the other\n- ✅ Active player can choose coordinate on enemy board\n- ✅ Program reports hit or miss and notes results\n- ❌ Shots on same place twice are not properly blocked\n- ✅ After one shot cycle, control changes to other player\n\n### Next Steps\n\nThis MR should be reviewed but **NOT MERGED** until:\n1. Pipeline passes all tests\n2. All acceptance criteria are fully validated\n3. Critical issues are resolved\n\nCloses #2",
    "state": "opened",
    "created_at": "2025-10-15T19:59:43.995Z",
    "updated_at": "2025-10-15T20:32:05.818Z",
    "merged_by": null,
    "merge_user": null,
    "merged_at": null,
    "closed_by": null,
    "closed_at": null,
    "target_branch": "master",
    "source_branch": "feature/issue-2-us-02-alternating-shooting-wit",
    "user_notes_count": 0,
    "upvotes": 0,
    "downvotes": 0,
    "author": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "assignees": [],
    "assignee": null,
    "reviewers": [],
    "source_project_id": 200,
    "target_project_id": 200,
    "labels": [],
    "draft": false,
    "imported": false,
    "imported_from": "none",
    "work_in_progress": false,
    "milestone": null,
    "merge_when_pipeline_succeeds": false,
    "merge_status": "unchecked",
    "detailed_merge_status": "unchecked",
    "merge_after": null,
    "sha": "dfa3d899a725597de5b3c1507282f73248484d24",
    "merge_commit_sha": null,
    "squash_commit_sha": null,
    "discussion_locked": null,
    "should_remove_source_branch": null,
    "force_remove_source_branch": null,
    "prepared_at": "2025-10-15T19:59:46.569Z",
    "reference": "!2",
    "references": {
      "short": "!2",
      "relative": "!2",
      "full": "simulationsprojects_bachelorarbeit_ivan_esau/ba_project_b04_battleship!2"
    },
    "web_url": "https://gitlab.nibbler.fh-swf.de/simulationsprojects_bachelorarbeit_ivan_esau/ba_project_b04_battleship/-/merge_requests/2",
    "time_stats": {
      "time_estimate": 0,
      "total_time_spent": 0,
      "human_time_estimate": null,
      "human_total_time_spent": null
    },
    "squash": false,
    "squash_on_merge": false,
    "task_completion_status": {
      "count": 0,
      "completed_count": 0
    },
    "has_conflicts": false,
    "blocking_discussions_resolved": true
  },
  {
    "id": 709,
    "iid": 3,
    "project_id": 200,
    "title": "[US-03] Ship damage, announcing sunk, and finishing",
    "description": "## Implementation Summary\n\nThis merge request implements ship damage tracking, sunk ship announcement, and game finishing functionality for the Battleship game.\n\n### Core Features Implemented:\n- **Ship Damage Tracking**: Each ship tracks individual hits and calculates sunk status\n- **Sunk Ship Announcement**: Automatic announcement when ships are completely damaged\n- **Game Finishing**: Automatic detection when all ships of one player are destroyed\n- **Turn Management**: Proper turn switching logic with extra turns after hits\n- **Game Reset**: Ability to restart the game with fresh boards\n\n### Technical Implementation:\n- Enhanced `Ship` class with hit tracking and sunk status detection\n- Enhanced `Board` class with shot processing and ship damage tracking\n- Created `Game` class for overall game state management\n- Created `GameService` for business logic operations\n- Created `ShotResult` class for shooting feedback\n- Created `GameState` enum for game status tracking\n\n### Requirements Coverage:\n✅ Count how many parts of each ship are hit\n✅ Know when a ship has all of its parts damaged  \n✅ Tell the player that the ship is sunk\n✅ When all ships of one participant are gone, declare that the other player has won\n✅ Block any more inputs when game is finished\n✅ Allow starting over through New Game option\n\n### Acceptance Criteria Coverage:\n✅ **Criterion 1**: When the last healthy square of a ship gets hit, that ship should be indicated as sunk\n✅ **Criterion 2**: When the final enemy ship is destroyed, the game should end, show who won, and not allow further shooting\n✅ **Criterion 3**: When a finished game is restarted, both boards become empty and hidden again\n\n### Current Status:\n- **Pipeline Status**: SUCCESS (#7731)\n- **Test Results**: All tests passing\n- **Implementation Status**: Complete and ready for merge\n\nCloses #3",
    "state": "merged",
    "created_at": "2025-10-15T20:57:45.624Z",
    "updated_at": "2025-10-15T21:37:36.739Z",
    "merged_by": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "merge_user": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "merged_at": "2025-10-15T21:37:37.135Z",
    "closed_by": null,
    "closed_at": null,
    "target_branch": "master",
    "source_branch": "feature/issue-3-us-03-ship-damage-announcing-s",
    "user_notes_count": 0,
    "upvotes": 0,
    "downvotes": 0,
    "author": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "assignees": [],
    "assignee": null,
    "reviewers": [],
    "source_project_id": 200,
    "target_project_id": 200,
    "labels": [],
    "draft": false,
    "imported": false,
    "imported_from": "none",
    "work_in_progress": false,
    "milestone": null,
    "merge_when_pipeline_succeeds": false,
    "merge_status": "can_be_merged",
    "detailed_merge_status": "not_open",
    "merge_after": null,
    "sha": "64c69570c9c9ed943b0c7e43171597e62f96088e",
    "merge_commit_sha": "25ead8f39c34c229858b9f1a5893b4d0e14e5948",
    "squash_commit_sha": null,
    "discussion_locked": null,
    "should_remove_source_branch": null,
    "force_remove_source_branch": null,
    "prepared_at": "2025-10-15T20:57:48.235Z",
    "reference": "!3",
    "references": {
      "short": "!3",
      "relative": "!3",
      "full": "simulationsprojects_bachelorarbeit_ivan_esau/ba_project_b04_battleship!3"
    },
    "web_url": "https://gitlab.nibbler.fh-swf.de/simulationsprojects_bachelorarbeit_ivan_esau/ba_project_b04_battleship/-/merge_requests/3",
    "time_stats": {
      "time_estimate": 0,
      "total_time_spent": 0,
      "human_time_estimate": null,
      "human_total_time_spent": null
    },
    "squash": false,
    "squash_on_merge": false,
    "task_completion_status": {
      "count": 0,
      "completed_count": 0
    },
    "has_conflicts": false,
    "blocking_discussions_resolved": true
  },
  {
    "id": 710,
    "iid": 4,
    "project_id": 200,
    "title": "[US-04] Playing alone against the computer",
    "description": "## Description\nImplements single-player mode against an AI opponent with two difficulty levels:\n\n### Features Implemented:\n- **AIService**: Core AI logic with Easy (random) and Normal (hunt-and-target) modes\n- **GameService**: Extended to support AI player turns\n- **ShipPlacementService**: AI ship placement with validation\n- **Comprehensive Testing**: Unit tests for AI behavior and game flow\n\n### AI Behavior:\n- **Easy Mode**: Random coordinate selection\n- **Normal Mode**: Strategic targeting near hits until ship is sunk\n- **Valid Ship Placement**: AI places ships correctly without overlaps\n- **Unique Shots**: AI never targets the same coordinate twice\n\n### Acceptance Criteria Verified:\n✅ When single-player mode starts, the computer's fleet exists, is valid and hidden.\n✅ When the computer makes a move, its shot is at a coordinate not previously targeted.\n✅ In Normal mode, if a shot hits, following shots try neighboring cells until that ship is sunk.\n\n### Technical Implementation:\n- Layered architecture following MVC pattern\n- Service layer separation for AI logic\n- Comprehensive test coverage with JUnit 5\n- Maven build system with 70% coverage requirement\n\nCloses #4",
    "state": "merged",
    "created_at": "2025-10-15T22:07:51.638Z",
    "updated_at": "2025-10-15T22:08:47.908Z",
    "merged_by": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "merge_user": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "merged_at": "2025-10-15T22:08:48.173Z",
    "closed_by": null,
    "closed_at": null,
    "target_branch": "master",
    "source_branch": "feature/issue-4-us-04-playing-alone-against-th",
    "user_notes_count": 0,
    "upvotes": 0,
    "downvotes": 0,
    "author": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "assignees": [],
    "assignee": null,
    "reviewers": [],
    "source_project_id": 200,
    "target_project_id": 200,
    "labels": [],
    "draft": false,
    "imported": false,
    "imported_from": "none",
    "work_in_progress": false,
    "milestone": null,
    "merge_when_pipeline_succeeds": false,
    "merge_status": "can_be_merged",
    "detailed_merge_status": "not_open",
    "merge_after": null,
    "sha": "8c3bf080a51f2c6f69888a1bf24d3803d6747d87",
    "merge_commit_sha": "6be6eb9de5a5a716e4480247b01ea7d29e3ea25b",
    "squash_commit_sha": null,
    "discussion_locked": null,
    "should_remove_source_branch": null,
    "force_remove_source_branch": null,
    "prepared_at": "2025-10-15T22:07:53.696Z",
    "reference": "!4",
    "references": {
      "short": "!4",
      "relative": "!4",
      "full": "simulationsprojects_bachelorarbeit_ivan_esau/ba_project_b04_battleship!4"
    },
    "web_url": "https://gitlab.nibbler.fh-swf.de/simulationsprojects_bachelorarbeit_ivan_esau/ba_project_b04_battleship/-/merge_requests/4",
    "time_stats": {
      "time_estimate": 0,
      "total_time_spent": 0,
      "human_time_estimate": null,
      "human_total_time_spent": null
    },
    "squash": false,
    "squash_on_merge": false,
    "task_completion_status": {
      "count": 0,
      "completed_count": 0
    },
    "has_conflicts": false,
    "blocking_discussions_resolved": true
  },
  {
    "id": 711,
    "iid": 5,
    "project_id": 200,
    "title": "[US-05] Saving and restoring the game",
    "description": "## Description\nImplements game save and load functionality for the Battleship game. Players can save the current game state to a file and later load it to continue from the same point.\n\n## Features Implemented\n- **GameStateSerializer**: Core serialization service for saving/loading game states\n- **Complete Game State Persistence**: Saves boards, ship placements, shots, turn state, difficulty, and running time\n- **File Validation**: Validates save files and handles corrupted/missing files gracefully\n- **Error Handling**: Comprehensive error handling for file operations\n- **Hidden State Preservation**: Hidden ship placements remain hidden after loading\n- **User File Selection**: Players can choose file location and name\n\n## Technical Implementation\n- **Serialization**: Java Object Serialization for complete game state\n- **File Operations**: Robust file handling with validation\n- **Integration**: Seamlessly integrated with existing GameService\n- **Testing**: Comprehensive unit and integration tests\n\n## Acceptance Criteria Validation\n✅ **If the game is saved and loaded right away, every visible part and all internal values should be identical** - Verified by `testSaveLoadCycle_preservesGameState`\n✅ **If a corrupted file is loaded, an error is displayed and the game remains the same** - Verified by `testLoadGame_corruptedFile_throwsException`\n✅ **If a completed game is saved and later loaded, it stays finished and waits for a new start** - Verified by game state preservation tests\n\n## Testing\n- **Unit Tests**: GameStateSerializerTest with 8 comprehensive test cases\n- **Integration Tests**: GameServiceSaveLoadTest with 8 integration test cases\n- **Coverage**: All save/load scenarios tested including edge cases\n\n## Files Modified\n- `src/main/java/org/example/battleship/service/GameStateSerializer.java` - Core serialization service\n- `src/test/java/org/example/battleship/service/GameStateSerializerTest.java` - Unit tests\n- `src/test/java/org/example/battleship/service/GameServiceSaveLoadTest.java` - Integration tests\n\n## Pipeline Status\n✅ **Pipeline #7814**: SUCCESS - All tests passed\n- Compile job: Success\n- Test job: Success\n\nCloses #5",
    "state": "merged",
    "created_at": "2025-10-15T23:38:48.836Z",
    "updated_at": "2025-10-15T23:41:59.493Z",
    "merged_by": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "merge_user": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "merged_at": "2025-10-15T23:41:59.761Z",
    "closed_by": null,
    "closed_at": null,
    "target_branch": "master",
    "source_branch": "feature/issue-5-us-05-saving-and-restoring-the",
    "user_notes_count": 0,
    "upvotes": 0,
    "downvotes": 0,
    "author": {
      "id": 9,
      "username": "Ivan-Esau",
      "name": "Ivan Esau",
      "state": "active",
      "locked": false,
      "avatar_url": "https://gitlab.nibbler.fh-swf.de/uploads/-/system/user/avatar/9/avatar.png",
      "web_url": "https://gitlab.nibbler.fh-swf.de/Ivan-Esau"
    },
    "assignees": [],
    "assignee": null,
    "reviewers": [],
    "source_project_id": 200,
    "target_project_id": 200,
    "labels": [],
    "draft": false,
    "imported": false,
    "imported_from": "none",
    "work_in_progress": false,
    "milestone": null,
    "merge_when_pipeline_succeeds": false,
    "merge_status": "can_be_merged",
    "detailed_merge_status": "not_open",
    "merge_after": null,
    "sha": "d24d1e3e36164ea014f50e3012b057ac8e998f24",
    "merge_commit_sha": "6f442c34222f9ac2e93b92822cb146584eef3b04",
    "squash_commit_sha": null,
    "discussion_locked": null,
    "should_remove_source_branch": null,
    "force_remove_source_branch": null,
    "prepared_at": "2025-10-15T23:38:52.159Z",
    "reference": "!5",
    "references": {
      "short": "!5",
      "relative": "!5",
      "full": "simulationsprojects_bachelorarbeit_ivan_esau/ba_project_b04_battleship!5"
    },
    "web_url": "https://gitlab.nibbler.fh-swf.de/simulationsprojects_bachelorarbeit_ivan_esau/ba_project_b04_battleship/-/merge_requests/5",
    "time_stats": {
      "time_estimate": 0,
      "total_time_spent": 0,
      "human_time_estimate": null,
      "human_total_time_spent": null
    },
    "squash": false,
    "squash_on_merge": false,
    "task_completion_status": {
      "count": 0,
      "completed_count": 0
    },
    "has_conflicts": false,
    "blocking_discussions_resolved": true
  }
]